D G "__PCH__" 0 0 ""4.057""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""30-May-08""
D G "__TIME__" 0 0 ""21:59:00"" "Program memory orgnization"
d G "PIN_A0" 2 20 "31744"
d G "PIN_A1" 2 21 "31745"
d G "PIN_A2" 2 22 "31746"
d G "PIN_A3" 2 23 "31747"
d G "PIN_A4" 2 24 "31748"
d G "PIN_A5" 2 25 "31749"
d G "PIN_B0" 2 27 "31752"
d G "PIN_B1" 2 28 "31753"
d G "PIN_B2" 2 29 "31754"
d G "PIN_B3" 2 30 "31755"
d G "PIN_B4" 2 31 "31756"
d G "PIN_B5" 2 32 "31757"
d G "PIN_B6" 2 33 "31758"
d G "PIN_B7" 2 34 "31759"
d G "PIN_C0" 2 36 "31760"
d G "PIN_C1" 2 37 "31761"
d G "PIN_C2" 2 38 "31762"
d G "PIN_C3" 2 39 "31763"
d G "PIN_C4" 2 40 "31764"
d G "PIN_C5" 2 41 "31765"
d G "PIN_C6" 2 42 "31766"
d G "PIN_C7" 2 43 "31767"
d G "PIN_D0" 2 45 "31768"
d G "PIN_D1" 2 46 "31769"
d G "PIN_D2" 2 47 "31770"
d G "PIN_D3" 2 48 "31771"
d G "PIN_D4" 2 49 "31772"
d G "PIN_D5" 2 50 "31773"
d G "PIN_D6" 2 51 "31774"
d G "PIN_D7" 2 52 "31775"
d G "PIN_E0" 2 54 "31776"
d G "PIN_E1" 2 55 "31777"
d G "PIN_E2" 2 56 "31778"
d G "PIN_E3" 2 57 "31779"
d G "PIN_E4" 2 58 "31780"
d G "PIN_E5" 2 59 "31781"
d G "PIN_E6" 2 60 "31782"
d G "PIN_E7" 2 61 "31783"
d G "PIN_F1" 2 63 "31785"
d G "PIN_F2" 2 64 "31786"
d G "PIN_F3" 2 65 "31787"
d G "PIN_F4" 2 66 "31788"
d G "PIN_F5" 2 67 "31789"
d G "PIN_F6" 2 68 "31790"
d G "PIN_F7" 2 69 "31791"
d G "PIN_G0" 2 71 "31792"
d G "PIN_G1" 2 72 "31793"
d G "PIN_G2" 2 73 "31794"
d G "PIN_G3" 2 74 "31795"
d G "PIN_G4" 2 75 "31796"
d G "PIN_G6" 2 76 "31798"
d G "PIN_G7" 2 77 "31799"
d G "FALSE" 2 80 "0"
d G "TRUE" 2 81 "1"
d G "BYTE" 2 83 "int8"
d G "BOOLEAN" 2 84 "int1"
d G "getc" 2 86 "getch"
d G "fgetc" 2 87 "getch"
d G "getchar" 2 88 "getch"
d G "putc" 2 89 "putchar"
d G "fputc" 2 90 "putchar"
d G "fgets" 2 91 "gets"
d G "fputs" 2 92 "puts"
d G "WDT_TIMEOUT" 2 98 "7"
d G "MCLR_FROM_SLEEP" 2 99 "11"
d G "MCLR_FROM_RUN" 2 100 "15"
d G "NORMAL_POWER_UP" 2 101 "12"
d G "BROWNOUT_RESTART" 2 102 "14"
d G "WDT_FROM_SLEEP" 2 103 "3"
d G "RESET_INSTRUCTION" 2 104 "0"
d G "RTCC_INTERNAL" 2 111 "0"
d G "RTCC_EXT_L_TO_H" 2 112 "32"
d G "RTCC_EXT_H_TO_L" 2 113 "48"
d G "RTCC_DIV_1" 2 115 "8"
d G "RTCC_DIV_2" 2 116 "0"
d G "RTCC_DIV_4" 2 117 "1"
d G "RTCC_DIV_8" 2 118 "2"
d G "RTCC_DIV_16" 2 119 "3"
d G "RTCC_DIV_32" 2 120 "4"
d G "RTCC_DIV_64" 2 121 "5"
d G "RTCC_DIV_128" 2 122 "6"
d G "RTCC_DIV_256" 2 123 "7"
d G "RTCC_OFF" 2 125 "0x80"
d G "RTCC_8_BIT" 2 127 "0x40"
d G "WDT_ON" 2 138 "0x100"
d G "WDT_OFF" 2 139 "0"
d G "T1_DISABLED" 2 145 "0"
d G "T1_INTERNAL" 2 146 "0x85"
d G "T1_EXTERNAL" 2 147 "0x87"
d G "T1_EXTERNAL_SYNC" 2 148 "0x83"
d G "T1_CLK_OUT" 2 150 "8"
d G "T1_DIV_BY_1" 2 152 "0"
d G "T1_DIV_BY_2" 2 153 "0x10"
d G "T1_DIV_BY_4" 2 154 "0x20"
d G "T1_DIV_BY_8" 2 155 "0x30"
d G "T2_DISABLED" 2 160 "0"
d G "T2_DIV_BY_1" 2 161 "4"
d G "T2_DIV_BY_4" 2 162 "5"
d G "T2_DIV_BY_16" 2 163 "6"
d G "T3_DISABLED" 2 169 "0"
d G "T3_INTERNAL" 2 170 "0x85"
d G "T3_EXTERNAL" 2 171 "0x87"
d G "T3_EXTERNAL_SYNC" 2 172 "0x83"
d G "T3_DIV_BY_1" 2 174 "0"
d G "T3_DIV_BY_2" 2 175 "0x10"
d G "T3_DIV_BY_4" 2 176 "0x20"
d G "T3_DIV_BY_8" 2 177 "0x30"
d G "T4_DISABLED" 2 182 "0"
d G "T4_DIV_BY_1" 2 183 "4"
d G "T4_DIV_BY_4" 2 184 "5"
d G "T4_DIV_BY_16" 2 185 "6"
d G "CCP_OFF" 2 191 "0"
d G "CCP_CAPTURE_FE" 2 192 "4"
d G "CCP_CAPTURE_RE" 2 193 "5"
d G "CCP_CAPTURE_DIV_4" 2 194 "6"
d G "CCP_CAPTURE_DIV_16" 2 195 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 196 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 197 "9"
d G "CCP_COMPARE_INT" 2 198 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 199 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 200 "0xB"
d G "CCP_PWM" 2 201 "0xC"
d G "CCP_PWM_PLUS_1" 2 202 "0x1c"
d G "CCP_PWM_PLUS_2" 2 203 "0x2c"
d G "CCP_PWM_PLUS_3" 2 204 "0x3c"
d G "CCP_USE_TIMER3" 2 205 "0x100"
v G "CCP_1" 2 206 "int16"
d G "CCP_PWM_H_H" 2 211 "0x0c"
d G "CCP_PWM_H_L" 2 212 "0x0d"
d G "CCP_PWM_L_H" 2 213 "0x0e"
d G "CCP_PWM_L_L" 2 214 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 216 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 217 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 218 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 220 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 221 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 222 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 223 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 224 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 225 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 226 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 228 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 229 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 230 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 232 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 233 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 234 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 236 "0x80000000"
v G "CCP_2" 2 238 "int16"
v G "CCP_3" 2 242 "int16"
v G "CCP_4" 2 246 "int16"
v G "CCP_5" 2 250 "int16"
d G "T3_CCP1_TO_5" 2 256 "0x48"
d G "T3_CCP2_TO_5" 2 257 "0x8"
d G "T3_CCP3_TO_5" 2 258 "0x40"
d G "PSP_ENABLED" 2 265 "0x10"
d G "PSP_DISABLED" 2 266 "0"
d G "SPI_MASTER" 2 273 "0x20"
d G "SPI_SLAVE" 2 274 "0x24"
d G "SPI_L_TO_H" 2 275 "0"
d G "SPI_H_TO_L" 2 276 "0x10"
d G "SPI_CLK_DIV_4" 2 277 "0"
d G "SPI_CLK_DIV_16" 2 278 "1"
d G "SPI_CLK_DIV_64" 2 279 "2"
d G "SPI_CLK_T2" 2 280 "3"
d G "SPI_SS_DISABLED" 2 281 "1"
d G "SPI_SAMPLE_AT_END" 2 283 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 284 "0x4000"
d G "UART_ADDRESS" 2 290 "2"
d G "UART_DATA" 2 291 "4"
d G "UART_AUTODETECT" 2 292 "8"
d G "UART_AUTODETECT_NOWAIT" 2 293 "9"
d G "UART_WAKEUP_ON_RDA" 2 294 "10"
d G "UART_SEND_BREAK" 2 295 "13"
d G "F6_F5_F4_F5" 2 299 "0x70ff04"
d G "F6_F5_F4_F3_OUT_ON_F2_F1" 2 300 "0x78F903"
d G "F6_F5_F4_F5_OUT_ON_F2_F1" 2 301 "0x70F905"
d G "NC_NC_NC_NC" 2 302 "0x00ff07"
d G "F6_F5_F4_F3" 2 303 "0x78ff02"
d G "F6_F5_NC_NC_OUT_ON_F2" 2 304 "0x60FB01"
d G "F6_VR_F4_VR" 2 305 "0x50ff06"
d G "F5_VR_F3_VR" 2 306 "0x28ff0e"
d G "VREF_LOW" 2 314 "0xa0"
d G "VREF_HIGH" 2 315 "0x80"
d G "VREF_F5" 2 317 "0x40"
d G "VREF_COMP" 2 318 "0x10"
d G "OSC_PLL_ON" 2 323 "0x4000"
d G "OSC_PLL_OFF" 2 324 "0"
d G "OSC_INTRC" 2 325 "3"
d G "OSC_NORMAL" 2 326 "2"
d G "OSC_TIMER1" 2 327 "1"
d G "OSC_IDLE_ON_SLEEP" 2 328 "0x80"
d G "OSC_STATE_EXT_RUNNING" 2 330 "8"
d G "ADC_OFF" 2 337 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 338 "0x100"
d G "ADC_CLOCK_DIV_4" 2 339 "0x04"
d G "ADC_CLOCK_DIV_8" 2 340 "0x01"
d G "ADC_CLOCK_DIV_16" 2 341 "0x05"
d G "ADC_CLOCK_DIV_32" 2 342 "0x02"
d G "ADC_CLOCK_DIV_64" 2 343 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 344 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 346 "0x00"
d G "ADC_TAD_MUL_2" 2 347 "0x08"
d G "ADC_TAD_MUL_4" 2 348 "0x10"
d G "ADC_TAD_MUL_6" 2 349 "0x18"
d G "ADC_TAD_MUL_8" 2 350 "0x20"
d G "ADC_TAD_MUL_12" 2 351 "0x28"
d G "ADC_TAD_MUL_16" 2 352 "0x30"
d G "ADC_TAD_MUL_20" 2 353 "0x38"
d G "NO_ANALOGS" 2 356 "0x0F" "None"
d G "ALL_ANALOG" 2 358 "0x03" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5 F6"
d G "AN0_TO_AN10" 2 359 "0x04" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5"
d G "AN0_TO_AN9" 2 360 "0x05" "A0 A1 A2 A3 A5 F1 F2 F3 F4"
d G "AN0_TO_AN8" 2 361 "0x06" "A0 A1 A2 A3 A5 F1 F2 F3"
d G "AN0_TO_AN7" 2 362 "0x07" "A0 A1 A2 A3 A5 F1 F2"
d G "AN0_TO_AN6" 2 363 "0x08" "A0 A1 A2 A3 A5 F1"
d G "AN0_TO_AN5" 2 364 "0x09" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN4" 2 365 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 366 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 367 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 368 "0x0D" "A0 A1"
d G "AN0" 2 369 "0x0E" "A0"
d G "VSS_VDD" 2 373 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 374 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 375 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 376 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 380 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 381 "1"
d G "ADC_READ_ONLY" 2 382 "6"
d G "L_TO_H" 2 394 "0x40"
d G "H_TO_L" 2 395 "0"
d G "GLOBAL" 2 397 "0xF2C0"
d G "INT_RTCC" 2 398 "0xF220"
d G "INT_TIMER0" 2 399 "0xF220"
d G "INT_TIMER1" 2 400 "0x9D01"
d G "INT_TIMER2" 2 401 "0x9D02"
d G "INT_TIMER3" 2 402 "0xA002"
d G "INT_EXT" 2 403 "0xF210"
d G "INT_EXT1" 2 404 "0xF008"
d G "INT_EXT2" 2 405 "0xF010"
d G "INT_EXT3" 2 406 "0xF020"
d G "INT_RB" 2 407 "0xFFF208"
d G "INT_PSP" 2 408 "0x9D80"
d G "INT_AD" 2 409 "0x9D40"
d G "INT_RDA" 2 410 "0x9D20"
d G "INT_TBE" 2 411 "0x9D10"
d G "INT_SSP" 2 412 "0x9D08"
d G "INT_CCP1" 2 413 "0x9D04"
d G "INT_CCP2" 2 414 "0xA001"
d G "INT_BUSCOL" 2 415 "0xA008"
d G "INT_COMP" 2 416 "0xA040"
d G "INT_RDA2" 2 417 "0xA320"
d G "INT_TBE2" 2 418 "0xA310"
d G "INT_TIMER4" 2 419 "0xA308"
d G "INT_CCP3" 2 420 "0xA301"
d G "INT_CCP4" 2 421 "0xA302"
d G "INT_CCP5" 2 422 "0xA304"
d G "INT_OSCF" 2 423 "0xA080"
d G "INT_BUSCOL2" 2 424 "0xA340"
d G "INT_SSP2" 2 425 "0xA380"
D G "TRACE0" 1 45 "(format)	"
D G "TRACE1" 1 46 "(format, arg1)"
D G "TRACE2" 1 47 "(format, arg1, arg2)"
D G "TRACE3" 1 48 "(format, arg1, arg2, arg3)"
D G "TRACE4" 1 49 "(format, arg1, arg2, arg3, arg4)"
D G "_BOOTLOADER" 0 10 ""
D G "RESET_VECTOR" 3 29 "0x0000" "Defined by hardware"
D G "HIGH_INT_VECTOR" 3 30 "0x0008" "Defined by hardware"
D G "NORMAL_INT_VECTOR" 3 31 "0x0018" "Defined by hardware"
D G "INTERRUPT_REMAP_END" 3 32 "HIGH_INT_VECTOR + 0x1B" "End of the remap code"
D G "LOADER_START" 3 34 "INTERRUPT_REMAP_END+1 + 2"
D G "LOADER_END" 3 35 "0x04FFF" "Defined by size of the bootloader code and/or protection fuses"
D G "LOADER_RESET" 3 36 "RESET_VECTOR"
D G "LOADER_HIGH_INT" 3 37 "LOADER_START"
D G "LOADER_NORMAL_INT" 3 38 "LOADER_HIGH_INT + 0x10"
D G "APPLICATION_START" 3 40 "LOADER_END + 2"
D G "APPLICATION_RESET" 3 41 "APPLICATION_START + RESET_VECTOR"
D G "APPLICATION_HIGH_INT" 3 42 "APPLICATION_START + HIGH_INT_VECTOR"
D G "APPLICATION_NORMAL_INT" 3 43 "APPLICATION_START + NORMAL_INT_VECTOR"
V G "BootloaderActive" 3 57 "int8"
D G "BOOTLOADER_CFG_ADDR" 3 77 "255"
F G "isr_relocate" 0 14 "void()" "Address 0x0008 is the hardware High priority interrupt"
C L "isr_relocate" 0 17 1 "FUNCTION"
C L "isr_relocate" 0 17 1 "FUNCTION"
C L "isr_relocate" 0 17 1 "FUNCTION"
C L "isr_relocate" 0 17 2 "FUNCTION"
C L "isr_relocate" 0 17 1 "FUNCTION"
C L "isr_relocate" 0 17 1 "FUNCTION"
C L "isr_relocate" 0 17 1 "FUNCTION"
D G "_STRING" 4 12 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 21 "unsigned int8"
D G "wchar_t" 5 22 "char"
D G "NULL" 5 23 "0"
D G "offsetof" 5 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 4 19 10 "FUNCTION"
V L "s1" 4 34 "*int8"
V L "s2" 4 34 "*int8"
V L "n" 4 34 "int8"
F G "memmove" 4 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 4 36 "*int8"
V L "sc2" 4 37 "*int8"
C L "strcopy" 4 19 3 "FUNCTION"
V L "s1" 4 53 "*int8"
V L "s2" 4 53 "*int8"
F G "strcopy" 4 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 55 "*int8"
C L "strncpy" 4 19 4 "FUNCTION"
V L "s1" 4 69 "*int8"
V L "s2" 4 69 "*int8"
V L "n" 4 69 "int8"
F G "strncpy" 4 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 71 "*int8"
C L "strcat" 4 19 3 "FUNCTION"
V L "s1" 4 86 "*int8"
V L "s2" 4 86 "*int8"
F G "strcat" 4 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 88 "*int8"
C L "strncat" 4 19 2 "FUNCTION"
V L "s1" 4 104 "*int8"
V L "s2" 4 104 "*int8"
V L "n" 4 104 "int8"
F G "strncat" 4 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 106 "*int8"
C L "memcmp" 4 19 3 "FUNCTION"
V L "s1" 4 128 "*int8"
V L "s2" 4 128 "*int8"
V L "n" 4 128 "int8"
F G "memcmp" 4 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 4 130 "*int8"
V L "su2" 4 130 "*int8"
C L "strcmp" 4 19 2 "FUNCTION"
V L "s1" 4 142 "*int8"
V L "s2" 4 142 "*int8"
F G "strcmp" 4 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 4 19 2 "FUNCTION"
V L "s1" 4 152 "*int8"
V L "s2" 4 152 "*int8"
F G "strcoll" 4 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 4 19 4 "FUNCTION"
V L "s1" 4 165 "*int8"
V L "s2" 4 165 "*int8"
V L "n" 4 165 "int8"
F G "strncmp" 4 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 4 19 3 "FUNCTION"
V L "s1" 4 177 "*int8"
V L "s2" 4 177 "*int8"
V L "n" 4 177 "int8"
F G "strxfrm" 4 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 4 179 "*int8"
V L "n1" 4 180 "int8"
C L "memchr" 4 19 3 "FUNCTION"
V L "s" 4 199 "*int8"
V L "c" 4 199 "int8"
V L "n" 4 199 "int8"
F G "memchr" 4 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 4 201 "int8"
V L "su" 4 202 "*int8"
C L "strchr" 4 19 2 "FUNCTION"
V L "s" 4 213 "*int8"
V L "c" 4 213 "int8"
F G "strchr" 4 214 "*int8(*int8 s,int8 c)"
V L "s1" 4 225 "*int8"
V L "s2" 4 225 "*int8"
F G "strcspn" 4 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 227 "*int8"
V L "sc2" 4 227 "*int8"
C L "strpbrk" 4 19 4 "FUNCTION"
V L "s1" 4 240 "*int8"
V L "s2" 4 240 "*int8"
F G "strpbrk" 4 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 242 "*int8"
V L "sc2" 4 242 "*int8"
C L "strrchr" 4 19 2 "FUNCTION"
V L "s" 4 255 "*int8"
V L "c" 4 255 "int8"
F G "strrchr" 4 256 "*int8(*int8 s,int8 c)"
V L "p" 4 257 "*int8"
V L "s1" 4 270 "*int8"
V L "s2" 4 270 "*int8"
F G "strspn" 4 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 4 272 "*int8"
V L "sc2" 4 272 "*int8"
C L "strstr" 4 19 6 "FUNCTION"
V L "s1" 4 289 "*int8"
V L "s2" 4 289 "*int8"
F G "strstr" 4 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 4 291 "*int8"
V L "t" 4 291 "*int8"
C L "strtok" 4 19 13 "FUNCTION"
V L "s1" 4 328 "*int8"
V L "s2" 4 328 "*int8"
F G "strtok" 4 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 4 330 "*int8"
V L "end" 4 330 "*int8"
V L "save" 4 331 "*int8"
V L "s" 4 377 "*int8"
F G "strlen" 4 378 "*int8(*int8 s)"
V L "sc" 4 379 "*int8"
C L "stricmp" 4 19 2 "FUNCTION"
V L "s1" 4 388 "*int8"
V L "s2" 4 388 "*int8"
F G "stricmp" 4 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 4 19 3 "FUNCTION"
V L "s" 4 402 "*int8"
F G "strlwr" 4 403 "*int8(*int8 s)"
V L "p" 4 404 "*int8"
D G "_STDLIB" 7 12 ""
D G "RAND_MAX" 7 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 7 24 "1"
T G "div_t" 7 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 7 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atof" 5 3 6 "FUNCTION"
C L "atof" 7 43 2 "FUNCTION"
C L "atof" 7 46 1 "*"
C L "atof" 7 46 1 "*"
V L "s" 7 50 "*int8"
F G "atof" 7 50 "float(*int8 s)" "Standard template: float32 atoe(char * s)"
C L "atof" 7 69 1 "*"
C L "atof" 7 69 1 "*"
C L "atof" 7 69 1 "*"
V L "s" 7 74 "*int8"
F G "atoe" 7 74 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 7 76 1 "*"
C L "atoe" 7 76 1 "*"
V L "s" 7 80 "*int8"
F G "atoi" 7 80 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 7 88 "*int8"
F G "atoi32" 7 88 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 7 76 2 "FUNCTION"
V L "num" 7 109 "sint32"
V L "base" 7 109 "int8"
V L "s" 7 109 "*int8"
F G "itoa" 7 109 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 7 111 1 "*"
C L "itoa" 7 111 1 "*"
V L "s" 7 115 "*int8"
F G "atol" 7 115 "sint16(*int8 s)" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 7 117 1 "*"
C L "atol" 7 117 1 "*"
C L "atol" 7 117 1 "*"
V L "s" 7 123 "*int8"
V L "endptr" 7 123 "*int8"
F G "strtod" 7 123 "float(*int8 s,*int8 endptr)" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 7 117 2 "FUNCTION"
C L "strtod" 7 126 1 "*"
C L "strtod" 7 126 1 "*"
C L "strtod" 7 126 2 "*"
C L "strtod" 7 139 1 "*"
C L "strtod" 7 139 1 "*"
C L "strtod" 7 139 1 "*"
C L "strtod" 7 139 1 "*"
V L "s" 7 145 "*int8"
V L "endptr" 7 145 "*int8"
V L "base" 7 145 "sint8"
F G "strtol" 7 145 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 7 147 1 "*"
C L "strtol" 7 147 1 "*"
C L "strtol" 7 147 1 "*"
C L "strtol" 7 147 1 "*"
V L "s" 7 153 "*int8"
V L "endptr" 7 153 "*int8"
V L "base" 7 153 "sint8"
F G "strtoul" 7 153 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 7 147 1 "FUNCTION"
C L "strtoul" 7 159 1 "*"
C L "strtoul" 7 159 1 "*"
C L "strtoul" 7 159 1 "*"
C L "strtoul" 7 159 1 "*"
C L "strtoul" 7 159 1 "*"
F G "rand" 7 168 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
C L "rand" 7 170 1 "*"
V L "seed" 7 190 "int32"
F G "srand" 7 190 "void(int32 seed)" "Memory management functions"
C L "srand" 7 170 3 "FUNCTION"
V L "string" 7 204 "*int8"
F G "system" 7 204 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 7 170 1 "FUNCTION"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 1 "*"
C L "system" 7 210 4 "*"
C L "system" 7 228 1 "*"
C L "system" 7 228 1 "*"
C L "system" 7 228 1 "*"
C L "system" 7 228 1 "*"
C L "system" 7 228 1 "*"
C L "system" 7 228 1 "*"
C L "system" 7 228 1 "*"
C L "system" 7 228 1 "*"
D G "labs" 7 248 "abs"
V L "numer" 7 250 "sint8"
V L "denom" 7 250 "sint8"
F G "div" 7 250 "div_t(sint8 numer,sint8 denom)"
V L "numer" 7 251 "sint16"
V L "denom" 7 251 "sint16"
F G "ldiv" 7 251 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 7 228 4 "FUNCTION"
C L "ldiv" 5 2 7 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
V L "numer" 7 273 "sint8"
V L "denom" 7 273 "sint8"
F G "div" 7 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 7 275 "div_t"
V L "numer" 7 281 "sint16"
V L "denom" 7 281 "sint16"
F G "ldiv" 7 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 7 283 "ldiv_t"
V L "s" 7 289 "*int8"
F G "atof" 7 290 "float(*int8 s)"
V L "pow10" 7 291 "float"
V L "result" 7 292 "float"
V L "sign" 7 293 "int8"
V L "c" 7 294 "int8"
V L "ptr" 7 295 "int8"
V L "s" 7 410 "*int8"
F G "atoe" 7 411 "float(*int8 s)"
V L "pow10" 7 412 "float"
V L "result" 7 413 "float"
V L "sign" 7 414 "int8"
V L "expsign" 7 415 "int8"
V L "c" 7 416 "int8"
V L "ptr" 7 417 "int8"
V L "i" 7 418 "int8"
V L "exp" 7 419 "float"
V L "expcnt" 7 420 "int8"
C L "atoe" 7 446 1 "FUNCTION"
V L "s" 7 477 "*int8"
F G "atoi" 7 478 "sint8(*int8 s)"
V L "result" 7 479 "sint8"
V L "sign" 7 480 "int8"
V L "base" 7 480 "int8"
V L "index" 7 480 "int8"
V L "c" 7 481 "int8"
C L "atoi" 7 446 1 "FUNCTION"
C L "atoi" 7 446 1 "FUNCTION"
C L "atoi" 7 446 1 "FUNCTION"
C L "atoi" 7 446 1 "FUNCTION"
C L "atoi" 7 446 1 "FUNCTION"
C L "atoi" 7 446 1 "FUNCTION"
V L "s" 7 546 "*int8"
F G "atol" 7 547 "sint16(*int8 s)"
V L "result" 7 548 "sint16"
V L "sign" 7 549 "int8"
V L "base" 7 549 "int8"
V L "index" 7 549 "int8"
V L "c" 7 550 "int8"
C L "atol" 7 446 1 "FUNCTION"
C L "atol" 7 446 1 "FUNCTION"
C L "atol" 7 446 1 "FUNCTION"
C L "atol" 7 446 1 "FUNCTION"
C L "mult_with10" 7 446 1 "FUNCTION"
V L "num" 7 613 "int32"
F G "mult_with10" 7 614 "sint32(int32 num)"
V L "s" 7 619 "*int8"
F G "atoi32" 7 620 "sint32(*int8 s)"
V L "result" 7 621 "sint32"
V L "sign" 7 622 "int8"
V L "base" 7 622 "int8"
V L "index" 7 622 "int8"
V L "c" 7 623 "int8"
C L "atoi32" 7 446 1 "FUNCTION"
C L "atoi32" 7 446 1 "FUNCTION"
C L "atoi32" 7 446 1 "FUNCTION"
C L "atoi32" 7 446 1 "FUNCTION"
C L "atoi32" 7 446 1 "FUNCTION"
V L "num" 7 818 "sint32"
V L "base" 7 818 "int8"
V L "s" 7 818 "*int8"
F G "itoa" 7 819 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 7 820 "int32"
V L "i" 7 821 "int8"
V L "sign" 7 821 "int8"
V L "cnt" 7 821 "int8"
V L "c" 7 822 "int8"
C L "itoa" 7 446 1 "FUNCTION"
C L "itoa" 7 446 1 "FUNCTION"
C L "itoa" 7 446 1 "FUNCTION"
C L "itoa" 7 446 1 "FUNCTION"
C L "itoa" 7 446 1 "FUNCTION"
V L "s" 7 856 "*int8"
V L "endptr" 7 856 "*int8"
F G "strtod" 7 856 "float(*int8 s,*int8 endptr)"
V L "pow10" 7 857 "float"
V L "result" 7 858 "float"
V L "sign" 7 859 "int8"
V L "point" 7 859 "int8"
V L "c" 7 860 "int8"
V L "ptr" 7 861 "int8"
V L "s" 7 1118 "*int8"
V L "endptr" 7 1118 "*int8"
V L "base" 7 1118 "sint8"
F G "strtoul" 7 1119 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 7 1120 "*int8"
V L "s1" 7 1120 "*int8"
V L "sd" 7 1120 "*int8"
V L "x" 7 1121 "int16"
V L "sign" 7 1122 "int8"
V L "digits" 7 1123 "int8[1]"
C L "strtoul" 7 446 1 "FUNCTION"
C L "strtoul" 7 446 1 "FUNCTION"
C L "strtoul" 7 446 1 "FUNCTION"
V L "s" 7 1180 "*int8"
V L "endptr" 7 1180 "*int8"
V L "base" 7 1180 "sint8"
F G "strtol" 7 1181 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 7 1182 "*int8"
V L "s1" 7 1182 "*int8"
V L "sd" 7 1182 "*int8"
V L "x" 7 1183 "sint16"
V L "sign" 7 1184 "int8"
V L "digits" 7 1185 "int8[1]"
C L "strtol" 7 446 1 "FUNCTION"
C L "strtol" 7 446 1 "FUNCTION"
C L "strtol" 7 446 1 "FUNCTION"
V L "string" 7 1243 "*int8"
F G "system" 7 1244 "sint8(*int8 string)"
V L "s" 7 1248 "*int8"
V L "n" 7 1248 "int8"
F G "mblen" 7 1249 "int8(*int8 s,int8 n)"
V L "pwc" 7 1253 "*int8"
V L "s" 7 1253 "*int8"
V L "n" 7 1253 "int8"
F G "mbtowc" 7 1254 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 7 1259 "*int8"
V L "wchar" 7 1259 "int8"
F G "wctomb" 7 1260 "int8(*int8 s,int8 wchar)"
V L "pwcs" 7 1265 "*int8"
V L "s" 7 1265 "*int8"
V L "n" 7 1265 "int8"
F G "mbstowcs" 7 1266 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 7 1271 "*int8"
V L "pwcs" 7 1271 "*int8"
V L "n" 7 1271 "int8"
F G "wcstombs" 7 1272 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 7 1281 "int32"
F G "rand" 7 1284 "int16()"
V L "seed" 7 1289 "int32"
F G "srand" 7 1290 "void(int32 seed)"
V L "p1" 7 1298 "*int8"
V L "p2" 7 1298 "*int8"
T G "*_Cmpfun" 7 1298 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 7 1300 "*int8"
V L "qitems" 7 1300 "int8"
V L "qsize" 7 1300 "int8"
V L "cmp" 7 1300 "_Cmpfun"
F G "qsort" 7 1300 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 7 1301 "int8"
V L "j" 7 1301 "int8"
V L "i" 7 1301 "int8"
V L "l" 7 1301 "int8"
V L "done" 7 1302 "int1"
V L "t" 7 1303 "int8[16]"
V L "key" 7 1328 "*int8"
V L "base" 7 1328 "*int8"
V L "num" 7 1328 "int8"
V L "width" 7 1328 "int8"
V L "cmp" 7 1328 "_Cmpfun"
F G "bsearch" 7 1329 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 7 1330 "*int8"
V L "q" 7 1330 "*int8"
V L "n" 7 1331 "int8"
V L "pivot" 7 1332 "int8"
V L "val" 7 1333 "sint8"
C L "bsearch" 7 446 1 "FUNCTION"
D G "EEPROM_SDA" 8 39 "PIN_C4"
D G "EEPROM_SCL" 8 40 "PIN_C3"
D G "EEPROM_ADDRESS" 8 47 "BYTE"
D G "EEPROM_SIZE" 8 48 "256"
F G "init_ext_eeprom" 8 50 "void()"
F G "ext_eeprom_ready" 8 55 "int8()"
V L "ack" 8 56 "int1"
C L "ext_eeprom_ready" 8 2 1 "FUNCTION"
C L "ext_eeprom_ready" 8 2 1 "FUNCTION"
V L "address" 8 63 "int8"
V L "data" 8 63 "int8"
F G "write_ext_eeprom" 8 63 "void(int8 address,int8 data)"
V L "address" 8 73 "int8"
F G "read_ext_eeprom" 8 73 "int8(int8 address)"
V L "data" 8 74 "int8"
T G "TimeRecord" 0 44 "{int16 tm_year,int8 tm_mon,int8 tm_day,int8 tm_mday,int8 tm_hour,int8 tm_min,int8 tm_sec}"
V G "myrec" 0 46 "TimeRecord"
D G "CardInserted" 0 48 "PIN_B0"
V G "gActCard" 0 49 "int8"
V G "gPrevCard" 0 49 "int8"
D G "MAXFILES" 9 1 "1"
T G "diskinforec" 9 24 "{int8[3] JumpCode,int8[8] OEMName,int16 BytsPerSec,int8 SecPerClus,int16 RsvdSecCnt,int8 NumFATs,int16 RootEntCnt,int16 TotSec16,int8 Media,int16 FATSz16,int16 SecPerTrk,int16 NumHeads,int32 HiddSec,int32 TotSec32,int32 FATSz32,int16 ExtFlags,int16 FSVer,int32 RootClus}"
T G "DIR" 9 37 "{int8[8] sName,int8[3] sExt,int8 bAttr,int8[8] bReserved,int16 hClusterH,int16 hTime,int16 hDate,int16 hCluster,int32 wSize}"
T G "FILE" 9 51 "{int8[512] IOpuffer,DIR DirEntry,int32 CurrentCluster,int8 SecInCluster,int16 posinsector,int32 wFileSize,int32 dirSector,int16 dirIdx,int8 mode,int8 Free}"
T G "FAT32Vars" 9 66 "{int32 MMCAddress,int32 FATstartidx,int32 gStartSector,int32 gFirstDataSector,int16 gDirEntryIdx,int32 gDirEntrySector,int16 gFirstEmptyDirEntry,int32 gFirstDirEntryCluster,int32 nRootDirSectors,int32 nFatSize,int8 bFATModified}"
D G "HANDLE" 9 68 "char"
F G "InitFAT" 9 70 "int8()"
V L "fname" 9 71 "*int8"
V L "hFile" 9 71 "int8"
F G "FindDirEntry" 9 71 "int8(*int8 fname,int8 hFile)"
V L "fname" 9 73 "*int8"
V L "mode" 9 73 "int8"
F G "fopen" 9 73 "int8(*int8 fname,int8 mode)"
V L "hFile" 9 74 "int8"
F G "fclose" 9 74 "void(int8 hFile)"
V L "hFile" 9 75 "int8"
F G "fflush" 9 75 "void(int8 hFile)"
V L "fname" 9 76 "*int8"
V L "hFile" 9 76 "int8"
F G "cwd" 9 76 "int8(*int8 fname,int8 hFile)"
V L "ch" 9 77 "int8"
V L "hFile" 9 77 "int8"
F G "fputch" 9 77 "void(int8 ch,int8 hFile)"
V L "ch" 9 78 "int8"
F G "fputchar" 9 78 "void(int8 ch)"
V L "ch" 9 79 "*int8"
V L "hFile" 9 79 "int8"
F G "fgetch" 9 79 "int8(*int8 ch,int8 hFile)"
V L "str" 9 80 "*int8"
V L "hFile" 9 80 "int8"
F G "fputstring" 9 80 "void(*int8 str,int8 hFile)" "fputs is reserved in CCS C"
V L "buffer" 9 81 "*int8"
V L "leng" 9 81 "int16"
V L "hFile" 9 81 "int8"
F G "fread" 9 81 "int16(*int8 buffer,int16 leng,int8 hFile)"
V L "buffer" 9 82 "*int8"
V L "leng" 9 82 "int16"
V L "hFile" 9 82 "int8"
F G "fwrite" 9 82 "void(*int8 buffer,int16 leng,int8 hFile)"
V L "fname" 9 83 "*int8"
F G "remove" 9 83 "int8(*int8 fname)"
V L "fname" 9 84 "*int8"
V L "fsiz" 9 84 "*int32"
F G "getfsize" 9 84 "int8(*int8 fname,*int32 fsiz)"
V G "FATTable" 10 5 "{int32[128] FAT32,int16[256] FAT16}"
V G "gFirstEmptyCluster" 10 7 "int32"
V G "gFAT32Vars" 10 9 "FAT32Vars"
V G "DiskInfo" 10 10 "diskinforec"
V G "gFiles" 10 11 "FILE[1]"
V G "gFATErrCode" 10 12 "int8"
C L "getfsize" 10 21 4 "FUNCTION"
V G "sFATName" 10 34 "int8[4][6]"
V G "gFATType" 10 35 "int8"
D G "MMC_NO_ERR" 11 1 "0"
D G "MMC_READ_GEN_ERR" 11 2 "0x10"
D G "MMC_READ_INVALID_ERR" 11 3 "0x11	" "Invalid sector address"
D G "MMC_READ_TOKEN_ERR" 11 4 "0x12	"
D G "MMC_WRITE_GEN_ERR" 11 5 "0x20"
D G "MMC_WRITE_SEC0_ERR" 11 6 "0x21	" "Attempt to write sector #0"
D G "MMC_WRITE_INVALID_ERR" 11 7 "0x22	" "Invalid sector address"
D G "MMC_INIT_RESET_ERR" 11 8 "0x30"
D G "MMC_INIT_IDLE_ERR" 11 9 "0x31"
V L "max_tries" 11 11 "int8"
F G "Init_MMC" 11 11 "int8(int8 max_tries)"
V L "sector" 11 12 "int32"
V L "buff" 11 12 "*int8"
F G "ReadSector" 11 12 "int8(int32 sector,*int8 buff)" "Read 512 bytes to buff"
V L "sector" 11 13 "int32"
V L "buff" 11 13 "*int8"
F G "WriteSector" 11 13 "int8(int32 sector,*int8 buff)" "Write 512 bytes from buff"
D G "ChipSel" 12 3 "pin_c2"
D G "ChipClk" 12 4 "pin_c3"
D G "ChipDin" 12 5 "pin_c5"
D G "NO_MMC_CARD" 12 12 "input(CardInserted)"
V L "cmd" 12 15 "int8"
V L "address" 12 15 "int32"
V L "tries" 12 15 "int8"
V L "valid" 12 15 "int8"
V L "invalid" 12 15 "int8"
F G "mmc_cmd" 12 16 "int8(int8 cmd,int32 address,int8 tries,int8 valid,int8 invalid)"
V L "i" 12 17 "int8"
V L "r1" 12 17 "int8"
C L "mmc_cmd" 12 7 7 "FUNCTION"
C L "mmc_cmd" 12 7 3 "FUNCTION"
V L "max_tries" 12 50 "int8"
F G "Init_MMC" 12 51 "int8(int8 max_tries)"
V L "i" 12 52 "int8"
V L "tries" 12 52 "int8"
V L "c" 12 52 "int8"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 2 "FUNCTION"
V L "response" 12 100 "int8"
F G "mmc_response" 12 101 "int8(int8 response)"
V L "count" 12 102 "int16"
C L "mmc_response" 12 7 1 "FUNCTION"
C L "mmc_response" 12 7 1 "FUNCTION"
C L "mmc_response" 12 7 1 "FUNCTION"
V L "sector" 12 113 "int32"
V L "buff" 12 113 "*int8"
F G "ReadSector" 12 114 "int8(int32 sector,*int8 buff)"
V L "r1" 12 115 "int8"
V L "i" 12 116 "int16"
V L "iw" 12 116 "int16" "/ allows large gt 255 buff size addressing"
C L "ReadSector" 12 7 1 "FUNCTION"
C L "ReadSector" 12 7 1 "FUNCTION"
C L "ReadSector" 12 7 1 "FUNCTION"
C L "ReadSector" 12 7 1 "FUNCTION"
V L "sector" 12 177 "int32"
V L "buff" 12 177 "*int8"
F G "WriteSector" 12 179 "int8(int32 sector,*int8 buff)"
V L "r1" 12 180 "int8"
V L "i" 12 181 "int16"
C L "WriteSector" 12 7 1 "FUNCTION"
C L "WriteSector" 12 7 1 "FUNCTION"
C L "WriteSector" 12 7 1 "FUNCTION"
C L "WriteSector" 12 7 1 "FUNCTION"
V L "ch" 10 40 "*int8"
F G "IsSelfDir" 10 41 "int8(*int8 ch)"
F G "GetCurrentDOSDate" 10 48 "int16()"
V L "retval" 10 49 "int16"
F G "GetCurrentDOSTime" 10 59 "int16()"
V L "retval" 10 60 "int16"
F G "InitFAT" 10 70 "int8()"
V L "actsector" 10 71 "int32"
V L "nTotalSec" 10 72 "int32"
V L "nDataSec" 10 72 "int32"
V L "nCountofClusters" 10 72 "int32"
V L "i" 10 73 "int8"
C L "InitFAT" 10 80 2 "FUNCTION"
C L "InitFAT" 10 80 1 "FUNCTION"
C L "InitFAT" 10 80 1 "FUNCTION"
C L "InitFAT" 10 80 2 "FUNCTION"
C L "InitFAT" 10 80 2 "FUNCTION"
F G "SaveFATTable" 10 146 "void()"
V L "actsector" 10 147 "int32"
V L "curcluster" 10 155 "int32"
F G "GetNextCluster" 10 156 "int32(int32 curcluster)"
V L "actsector" 10 157 "int32"
V L "clpage" 10 158 "int32"
V L "clpos" 10 159 "int8"
C L "GetNextCluster" 10 80 1 "FUNCTION"
C L "GetNextCluster" 10 80 1 "FUNCTION"
C L "GetNextCluster" 10 80 1 "FUNCTION"
V L "curcluster" 10 198 "int32"
V L "value" 10 198 "int32"
F G "SetClusterEntry" 10 199 "void(int32 curcluster,int32 value)"
V L "actsector" 10 200 "int32"
V L "clpage" 10 201 "int32"
V L "clpos" 10 202 "int8"
C L "SetClusterEntry" 10 80 1 "FUNCTION"
C L "SetClusterEntry" 10 80 1 "FUNCTION"
C L "SetClusterEntry" 10 80 2 "FUNCTION"
C L "SetClusterEntry" 10 80 1 "FUNCTION"
C L "SetClusterEntry" 10 80 1 "FUNCTION"
C L "SetClusterEntry" 10 80 3 "FUNCTION"
V L "curcluster" 10 246 "int32"
F G "ClearClusterEntry" 10 247 "void(int32 curcluster)"
V L "actsector" 10 248 "int32"
V L "clpage" 10 249 "int32"
V L "clpos" 10 250 "int8"
C L "ClearClusterEntry" 10 80 1 "FUNCTION"
C L "ClearClusterEntry" 10 80 1 "FUNCTION"
F G "FindFirstFreeCluster" 10 288 "int32()"
V L "i" 10 289 "int32"
V L "st" 10 289 "int32"
V L "actsector" 10 289 "int32"
V L "retval" 10 289 "int32"
V L "j" 10 290 "int16"
C L "FindFirstFreeCluster" 10 80 1 "FUNCTION"
C L "FindFirstFreeCluster" 10 80 1 "FUNCTION"
V L "beDir" 10 347 "*DIR"
V L "name" 10 347 "*int8"
F G "ConvertFilename" 10 348 "void(*DIR beDir,*int8 name)"
V L "i" 10 349 "int8"
V L "j" 10 349 "int8"
V L "c" 10 349 "int8"
V L "pDir" 10 367 "*DIR"
V L "fname" 10 367 "*int8"
F G "GetDOSName" 10 368 "void(*DIR pDir,*int8 fname)"
V L "i" 10 369 "int8"
V L "j" 10 369 "int8"
V L "leng" 10 369 "int8"
V L "c" 10 369 "int8"
V L "toext" 10 369 "int8"
C L "ReadRootDirectory" 10 80 1 "FUNCTION"
V L "hFile" 10 391 "int8"
F G "ReadRootDirectory" 10 392 "void(int8 hFile)"
V L "actsector" 10 393 "int32"
C L "FindDirEntry" 10 80 1 "FUNCTION"
V L "fname" 10 412 "*int8"
V L "hFile" 10 412 "int8"
F G "FindDirEntry" 10 413 "int8(*int8 fname,int8 hFile)"
V L "pDir" 10 414 "*DIR"
V L "i" 10 415 "int16"
V L "filename" 10 416 "int8[16]"
V L "nextcluster" 10 417 "int32"
V L "actsector" 10 417 "int32"
V L "nSecInClus" 10 418 "int8"
V L "bDone" 10 419 "int8"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "FindDirEntry" 10 80 1 "FUNCTION"
C L "TryFile" 10 80 1 "FUNCTION"
V L "fname" 10 507 "*int8"
V L "hFile" 10 507 "*int8"
F G "TryFile" 10 508 "*int8(*int8 fname,*int8 hFile)"
V L "i" 10 509 "int8"
V L "leng" 10 509 "int8"
V L "filename" 10 510 "*int8"
V L "hFile" 10 545 "int8"
V L "fname" 10 545 "*int8"
F G "fcreate" 10 546 "int8(int8 hFile,*int8 fname)"
V L "pDir" 10 547 "*DIR"
V L "actsector" 10 548 "int32"
V L "actcl" 10 548 "int32"
V L "i" 10 549 "int16"
C L "fcreate" 10 80 1 "FUNCTION"
C L "fcreate" 10 80 1 "FUNCTION"
C L "fcreate" 10 80 1 "FUNCTION"
C L "fcreate" 10 80 1 "FUNCTION"
C L "fcreate" 10 80 1 "FUNCTION"
V L "hFile" 10 624 "int8"
F G "ComposeCluster" 10 625 "int32(int8 hFile)"
V L "retval" 10 626 "int32"
V L "fname" 10 634 "*int8"
V L "mode" 10 634 "int8"
F G "fopen" 10 635 "int8(*int8 fname,int8 mode)"
V L "found" 10 636 "int8"
V L "hFile" 10 637 "int8"
V L "actsector" 10 638 "int32"
V L "actcluster" 10 638 "int32"
V L "nextcluster" 10 638 "int32"
V L "filename" 10 639 "*int8"
C L "fopen" 10 80 1 "FUNCTION"
C L "fopen" 10 80 1 "FUNCTION"
C L "fopen" 10 80 1 "FUNCTION"
C L "fopen" 10 80 1 "FUNCTION"
V L "hFile" 10 714 "int8"
F G "fclose" 10 715 "void(int8 hFile)" "output_low(YELLOWLED);"
V L "hFile" 10 726 "int8"
F G "fflush" 10 727 "void(int8 hFile)"
V L "actsector" 10 728 "int32"
V L "pDir" 10 729 "*DIR"
C L "fflush" 10 80 1 "FUNCTION"
C L "fflush" 10 80 1 "FUNCTION"
C L "fflush" 10 80 1 "FUNCTION"
C L "fflush" 10 80 1 "FUNCTION"
C L "fflush" 10 80 1 "FUNCTION"
C L "fflush" 10 80 1 "FUNCTION"
C L "fflush" 10 80 1 "FUNCTION"
V L "fname" 10 765 "*int8"
V L "hFile" 10 765 "int8"
F G "cwd" 10 766 "int8(*int8 fname,int8 hFile)"
V L "actsector" 10 767 "int32"
C L "cwd" 10 80 1 "FUNCTION"
C L "cwd" 10 80 1 "FUNCTION"
C L "cwd" 10 80 1 "FUNCTION"
C L "cwd" 10 80 1 "FUNCTION"
V L "ch" 10 787 "int8"
V L "hFile" 10 787 "int8"
F G "fputch" 10 788 "void(int8 ch,int8 hFile)"
V L "nextcluster" 10 789 "int32"
V L "actsector" 10 789 "int32"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
C L "fputch" 10 80 1 "FUNCTION"
V L "str" 10 848 "*int8"
V L "hFile" 10 848 "int8"
F G "fputstring" 10 849 "void(*int8 str,int8 hFile)"
V L "buffer" 10 862 "*int8"
V L "leng" 10 862 "int16"
V L "hFile" 10 862 "int8"
F G "fread" 10 863 "int16(*int8 buffer,int16 leng,int8 hFile)"
V L "i" 10 864 "int16"
V L "retv" 10 864 "int16"
V L "c" 10 865 "int8"
V L "v" 10 865 "int8"
V L "buffer" 10 883 "*int8"
V L "leng" 10 883 "int16"
V L "hFile" 10 883 "int8"
F G "fwrite" 10 884 "void(*int8 buffer,int16 leng,int8 hFile)"
V L "i" 10 885 "int16"
V L "ch" 10 897 "*int8"
V L "hFile" 10 897 "int8"
F G "fgetch" 10 898 "int8(*int8 ch,int8 hFile)"
V L "nextcluster" 10 899 "int32"
V L "actsector" 10 899 "int32"
C L "fgetch" 10 80 1 "FUNCTION"
C L "fgetch" 10 80 1 "FUNCTION"
C L "fgetch" 10 80 1 "FUNCTION"
C L "fgetch" 10 80 1 "FUNCTION"
V L "fname" 10 939 "*int8"
F G "remove" 10 940 "int8(*int8 fname)"
V L "i" 10 941 "int8"
V L "found" 10 941 "int8"
V L "hFile" 10 942 "int8"
V L "pDir" 10 943 "*DIR"
V L "nextcluster" 10 944 "int32"
V L "CurrentCluster" 10 944 "int32"
V L "filename" 10 945 "*int8"
C L "remove" 10 80 4 "FUNCTION"
V L "fname" 10 979 "*int8"
V L "fsiz" 10 979 "*int32"
F G "getfsize" 10 980 "int8(*int8 fname,*int32 fsiz)"
V L "found" 10 981 "int8"
V L "hFile" 10 982 "int8"
V L "pDir" 10 983 "*DIR"
V L "filename" 10 984 "*int8"
C L "getfsize" 10 80 1 "FUNCTION"
V G "hFile" 0 54 "int8"
V G "gfilename" 0 55 "int8[32]"
D G "BUFFER_BIN_BLOCK" 0 57 "1024	" "minimum 64"
V G "gBinBlock" 0 60 "int8[1024]"
V G "gBlockAddr" 0 61 "int32"
V G "gBlockWritePtr" 0 62 "int16" "CompactFlash MP3 Player with PIC16F877L(PLCC) VS1001K LPH7779-LCD(Nokia 3310)"
D G "USERPORT_ON" 13 35 "0xE0	" "iiio oooo"
D G "USERPORT_OFF" 13 36 "0xEF"
D G "NOKIA_GRAPH" 13 38 ""
V G "nokia_vram" 13 41 "int8[504]" "84*48 pixels"
V G "nCharPos" 13 42 "int16"
C L "nokia_getpixel" 13 22 1 "FUNCTION"
V L "x" 13 46 "int8"
V L "y" 13 46 "int8"
F G "nokia_getpixel" 13 46 "int8(int8 x,int8 y)"
V L "x" 13 47 "int8"
V L "y" 13 47 "int8"
V L "nColor" 13 47 "int8"
F G "nokia_putpixel" 13 47 "void(int8 x,int8 y,int8 nColor)"
F G "nokia_refresh" 13 48 "void()" "5*7 font"
V G "TABLE5" 13 52 "int8[240]"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
V G "TABLE6" 13 103 "int8[240]"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 3 "FUNCTION"
F G "nokia_init" 13 156 "void()" "#SEPARATE"
V L "bytefornokia_command" 13 158 "int8"
F G "nokia_write_command" 13 158 "void(int8 bytefornokia_command)" "#SEPARATE"
V L "bytefornokia_data" 13 160 "int8"
F G "nokia_write_data" 13 160 "void(int8 bytefornokia_data)" "#SEPARATE"
V L "bytefornokia" 13 162 "int8"
F G "nokia_write_dorc" 13 162 "void(int8 bytefornokia)" "#SEPARATE"
V L "xnokia" 13 164 "int8"
V L "ynokia" 13 164 "int8"
F G "nokia_gotoxy" 13 164 "void(int8 xnokia,int8 ynokia)" "#SEPARATE"
V L "cvar" 13 166 "int8"
F G "nokia_printchar" 13 166 "void(int8 cvar)" "#SEPARATE"
F G "nokia_clean_ddram" 13 168 "void()"
F G "table_to_nokialcd" 13 170 "void()" "--------------------------------------end prototypes"
V G "ddram" 13 173 "int16"
V G "charpos" 13 174 "int16"
V G "char_row" 13 175 "int8"
V G "charsel" 13 175 "int8"
V G "chardata" 13 175 "int8"
V G "char_invert" 13 176 "int8"
F G "TestLCD" 13 179 "void()"
C L "TestLCD" 13 22 1 "FUNCTION"
C L "TestLCD" 13 22 1 "FUNCTION"
C L "TestLCD" 13 22 1 "FUNCTION"
C L "TestLCD" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
F G "nokia_init" 13 198 "void()"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_init" 13 22 1 "FUNCTION"
C L "nokia_clean_ddram" 13 22 1 "FUNCTION"
F G "nokia_clean_ddram" 13 240 "void()"
C L "nokia_write_command" 13 22 1 "FUNCTION"
V L "bytefornokia_command" 13 252 "int8"
F G "nokia_write_command" 13 253 "void(int8 bytefornokia_command)"
C L "nokia_write_command" 13 22 1 "FUNCTION"
C L "nokia_write_command" 13 22 1 "FUNCTION"
C L "nokia_write_command" 13 22 1 "FUNCTION"
C L "nokia_write_command" 13 22 1 "FUNCTION"
C L "nokia_write_command" 13 22 1 "FUNCTION"
C L "nokia_write_data" 13 22 1 "FUNCTION"
V L "bytefornokia_data" 13 266 "int8"
F G "nokia_write_data" 13 267 "void(int8 bytefornokia_data)"
C L "nokia_write_data" 13 22 2 "FUNCTION"
C L "nokia_write_dorc" 13 22 1 "FUNCTION"
V L "bytefornokia" 13 291 "int8" "serial write data or command subroutine"
F G "nokia_write_dorc" 13 292 "void(int8 bytefornokia)"
V L "caa" 13 293 "sint8"
C L "nokia_gotoxy" 13 22 1 "FUNCTION"
V L "xnokia" 13 306 "int8"
V L "ynokia" 13 306 "int8" "Nokia LCD 3310 Position cursor"
F G "nokia_gotoxy" 13 307 "void(int8 xnokia,int8 ynokia)"
C L "nokia_printchar" 13 22 1 "FUNCTION"
V L "cvar" 13 319 "int8" "Write 1 character to LCD"
F G "nokia_printchar" 13 320 "void(int8 cvar)"
C L "table_to_nokialcd" 13 22 1 "FUNCTION"
F G "table_to_nokialcd" 13 328 "void()"
C L "table_to_nokialcd" 13 22 1 "FUNCTION"
C L "table_to_nokialcd" 13 22 1 "FUNCTION"
C L "table_to_nokialcd" 13 22 1 "FUNCTION"
C L "table_to_nokialcd" 13 22 1 "FUNCTION"
C L "table_to_nokialcd" 13 22 1 "FUNCTION"
C L "nokia_power_down" 13 22 1 "FUNCTION"
F G "nokia_power_down" 13 348 "void(int8 cvar,int8 ynokia)"
C L "nokia_power_up" 13 22 1 "FUNCTION"
F G "nokia_power_up" 13 354 "void(int8 ynokia)"
C L "nokia_char_invert" 13 22 1 "FUNCTION"
V L "bInvert" 13 358 "int8"
F G "nokia_char_invert" 13 359 "void(int8 bInvert)"
V L "x" 13 364 "int8"
V L "y" 13 364 "int8"
F G "nokia_getpixel" 13 365 "int8(int8 x,int8 y)"
V L "nPos" 13 366 "int16"
V L "nPixel" 13 367 "int8"
V L "x" 13 377 "int8"
V L "y" 13 377 "int8"
V L "nColor" 13 377 "int8"
F G "nokia_putpixel" 13 378 "void(int8 x,int8 y,int8 nColor)"
V L "nPos" 13 379 "int16"
V L "nPixel" 13 380 "int8"
V L "x" 13 398 "int8"
V L "y" 13 398 "int8"
V L "pText" 13 398 "*int8"
V L "nColor" 13 398 "int8"
F G "nokia_drawtextxy" 13 399 "void(int8 x,int8 y,*int8 pText,int8 nColor)"
V L "x1" 13 403 "int8"
V L "y1" 13 403 "int8"
V L "x2" 13 403 "int8"
V L "y2" 13 403 "int8"
V L "color" 13 403 "int8"
F G "nokia_line" 13 404 "void(int8 x1,int8 y1,int8 x2,int8 y2,int8 color)"
V L "deltax" 13 405 "sint16"
V L "deltay" 13 405 "sint16"
V L "numpixels" 13 405 "sint16"
V L "i" 13 406 "sint16"
V L "d" 13 407 "sint16"
V L "dinc1" 13 407 "sint16"
V L "dinc2" 13 407 "sint16"
V L "x" 13 408 "sint16"
V L "xinc1" 13 408 "sint16"
V L "xinc2" 13 408 "sint16"
V L "y" 13 409 "sint16"
V L "yinc1" 13 409 "sint16"
V L "yinc2" 13 409 "sint16"
C L "nokia_line" 13 22 1 "FUNCTION"
C L "nokia_line" 13 22 1 "FUNCTION"
C L "nokia_line" 13 22 1 "FUNCTION"
C L "nokia_line" 13 22 1 "FUNCTION"
C L "nokia_line" 13 22 1 "FUNCTION"
C L "nokia_line" 13 22 1 "FUNCTION"
V L "x" 13 480 "int8"
V L "y" 13 480 "int8"
V L "r" 13 480 "int8"
V L "color" 13 480 "int8"
F G "nokia_circle" 13 481 "void(int8 x,int8 y,int8 r,int8 color)"
V L "x1" 13 483 "sint8"
V L "y1" 13 483 "sint8"
V L "p" 13 485 "sint8"
C L "nokia_circle" 13 22 1 "FUNCTION"
F G "nokia_refresh" 13 515 "void()"
V L "i" 13 516 "int16" "Set DRAM address 0"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
C L "nokia_refresh" 13 22 1 "FUNCTION"
V L "s" 0 66 "*int8"
F G "atoi_b16" 0 66 "int8(*int8 s)" "Convert two hex characters to a int8"
V L "result" 0 67 "int8"
V L "i" 0 68 "int8"
V L "addr" 0 95 "int32"
V L "pBuff" 0 95 "*int8"
V L "nLen" 0 95 "int16"
F G "WriteFlashBlock" 0 96 "void(int32 addr,*int8 pBuff,int16 nLen)"
V L "i" 0 97 "int8"
V L "j" 0 97 "int8"
C L "WriteFlashBlock" 0 101 1 "FUNCTION"
C L "WriteFlashBlock" 0 101 2 "FUNCTION"
C L "WriteFlashBlock" 0 101 1 "FUNCTION"
C L "WriteFlashBlock" 0 101 1 "FUNCTION"
V L "hFile" 0 150 "int8"
F G "LoadProgram" 0 151 "void(int8 hFile)"
V L "nChar" 0 152 "int8"
V L "bMoreChar" 0 153 "int8"
V L "bDone" 0 154 "int8"
V L "i" 0 155 "int16"
C L "LoadProgram" 0 101 1 "FUNCTION"
C L "LoadProgram" 0 101 1 "FUNCTION"
C L "LoadProgram" 0 101 1 "FUNCTION"
C L "LoadProgram" 0 101 1 "FUNCTION"
F G "UserProgram" 0 223 "void()"
F G "MAIN" 0 234 "void()"
V L "i" 0 235 "int16"
V L "error" 0 236 "int8"
V L "bSDReady" 0 237 "int8"
C L "MAIN" 0 101 1 "FUNCTION"
C L "MAIN" 0 101 1 "FUNCTION"
C L "MAIN" 0 101 2 "FUNCTION"
C L "MAIN" 0 101 1 "FUNCTION"
C L "MAIN" 0 101 3 "FUNCTION"
C L "MAIN" 0 101 1 "FUNCTION"
C L "MAIN" 0 101 2 "FUNCTION"
C L "MAIN" 0 101 1 "FUNCTION"
C L "MAIN" 0 101 1 "FUNCTION"
C L "MAIN" 0 101 2 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "output_f" 1 0
F B "output_g" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "input_f" 0 0
F B "input_g" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "set_tris_f" 1 0
F B "set_tris_g" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "get_tris_f" 0 0
F B "get_tris_g" 0 0
F B "port_b_pullups" 1 0
F B "port_d_pullups" 1 0
F B "port_e_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 2
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_vref" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
