D G "__PCH__" 0 637 ""4.033""
D G "__DEVICE__" 0 637 "6750"
D G "__DATE__" 0 637 ""04-Sep-07""
D G "__TIME__" 0 637 ""00:13:18"" "Standard Header file for the PIC18F67J50 device ////////////////"
d G "PIN_A0" 2 20 "31744"
d G "PIN_A1" 2 21 "31745"
d G "PIN_A2" 2 22 "31746"
d G "PIN_A3" 2 23 "31747"
d G "PIN_A4" 2 24 "31748"
d G "PIN_A5" 2 25 "31749"
d G "PIN_B0" 2 27 "31752"
d G "PIN_B1" 2 28 "31753"
d G "PIN_B2" 2 29 "31754"
d G "PIN_B3" 2 30 "31755"
d G "PIN_B4" 2 31 "31756"
d G "PIN_B5" 2 32 "31757"
d G "PIN_B6" 2 33 "31758"
d G "PIN_B7" 2 34 "31759"
d G "PIN_C0" 2 36 "31760"
d G "PIN_C1" 2 37 "31761"
d G "PIN_C2" 2 38 "31762"
d G "PIN_C3" 2 39 "31763"
d G "PIN_C4" 2 40 "31764"
d G "PIN_C5" 2 41 "31765"
d G "PIN_C6" 2 42 "31766"
d G "PIN_C7" 2 43 "31767"
d G "PIN_D0" 2 45 "31768"
d G "PIN_D1" 2 46 "31769"
d G "PIN_D2" 2 47 "31770"
d G "PIN_D3" 2 48 "31771"
d G "PIN_D4" 2 49 "31772"
d G "PIN_D5" 2 50 "31773"
d G "PIN_D6" 2 51 "31774"
d G "PIN_D7" 2 52 "31775"
d G "PIN_E0" 2 54 "31776"
d G "PIN_E1" 2 55 "31777"
d G "PIN_E2" 2 56 "31778"
d G "PIN_E3" 2 57 "31779"
d G "PIN_E4" 2 58 "31780"
d G "PIN_E5" 2 59 "31781"
d G "PIN_E6" 2 60 "31782"
d G "PIN_E7" 2 61 "31783"
d G "PIN_F1" 2 63 "31785"
d G "PIN_F2" 2 64 "31786"
d G "PIN_F3" 2 65 "31787"
d G "PIN_F4" 2 66 "31788"
d G "PIN_F5" 2 67 "31789"
d G "PIN_F6" 2 68 "31790"
d G "PIN_F7" 2 69 "31791"
d G "PIN_G0" 2 71 "31792"
d G "PIN_G1" 2 72 "31793"
d G "PIN_G2" 2 73 "31794"
d G "PIN_G3" 2 74 "31795"
d G "PIN_G4" 2 75 "31796"
d G "PIN_G6" 2 76 "31798"
d G "PIN_G7" 2 77 "31799"
d G "FALSE" 2 80 "0"
d G "TRUE" 2 81 "1"
d G "BYTE" 2 83 "int"
d G "BOOLEAN" 2 84 "short int"
d G "getc" 2 86 "getch"
d G "fgetc" 2 87 "getch"
d G "getchar" 2 88 "getch"
d G "putc" 2 89 "putchar"
d G "fputc" 2 90 "putchar"
d G "fgets" 2 91 "gets"
d G "fputs" 2 92 "puts"
d G "WDT_TIMEOUT" 2 98 "7"
d G "MCLR_FROM_SLEEP" 2 99 "11"
d G "MCLR_FROM_RUN" 2 100 "15"
d G "NORMAL_POWER_UP" 2 101 "12"
d G "BROWNOUT_RESTART" 2 102 "14"
d G "WDT_FROM_SLEEP" 2 103 "3"
d G "RESET_INSTRUCTION" 2 104 "0"
d G "RTCC_INTERNAL" 2 111 "0"
d G "RTCC_EXT_L_TO_H" 2 112 "32"
d G "RTCC_EXT_H_TO_L" 2 113 "48"
d G "RTCC_DIV_1" 2 115 "8"
d G "RTCC_DIV_2" 2 116 "0"
d G "RTCC_DIV_4" 2 117 "1"
d G "RTCC_DIV_8" 2 118 "2"
d G "RTCC_DIV_16" 2 119 "3"
d G "RTCC_DIV_32" 2 120 "4"
d G "RTCC_DIV_64" 2 121 "5"
d G "RTCC_DIV_128" 2 122 "6"
d G "RTCC_DIV_256" 2 123 "7"
d G "RTCC_OFF" 2 125 "0x80"
d G "RTCC_8_BIT" 2 127 "0x40"
d G "WDT_ON" 2 137 "0x100"
d G "WDT_OFF" 2 138 "0"
d G "T1_DISABLED" 2 144 "0"
d G "T1_INTERNAL" 2 145 "0x85"
d G "T1_EXTERNAL" 2 146 "0x87"
d G "T1_EXTERNAL_SYNC" 2 147 "0x83"
d G "T1_CLK_OUT" 2 149 "8"
d G "T1_DIV_BY_1" 2 151 "0"
d G "T1_DIV_BY_2" 2 152 "0x10"
d G "T1_DIV_BY_4" 2 153 "0x20"
d G "T1_DIV_BY_8" 2 154 "0x30"
d G "T2_DISABLED" 2 159 "0"
d G "T2_DIV_BY_1" 2 160 "4"
d G "T2_DIV_BY_4" 2 161 "5"
d G "T2_DIV_BY_16" 2 162 "6"
d G "T3_DISABLED" 2 168 "0"
d G "T3_INTERNAL" 2 169 "0x85"
d G "T3_EXTERNAL" 2 170 "0x87"
d G "T3_EXTERNAL_SYNC" 2 171 "0x83"
d G "T3_DIV_BY_1" 2 173 "0"
d G "T3_DIV_BY_2" 2 174 "0x10"
d G "T3_DIV_BY_4" 2 175 "0x20"
d G "T3_DIV_BY_8" 2 176 "0x30"
d G "T4_DISABLED" 2 181 "0"
d G "T4_DIV_BY_1" 2 182 "4"
d G "T4_DIV_BY_4" 2 183 "5"
d G "T4_DIV_BY_16" 2 184 "6"
d G "CCP_OFF" 2 190 "0"
d G "CCP_CAPTURE_FE" 2 191 "4"
d G "CCP_CAPTURE_RE" 2 192 "5"
d G "CCP_CAPTURE_DIV_4" 2 193 "6"
d G "CCP_CAPTURE_DIV_16" 2 194 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 195 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 196 "9"
d G "CCP_COMPARE_INT" 2 197 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 198 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 199 "0xB"
d G "CCP_PWM" 2 200 "0xC"
d G "CCP_PWM_PLUS_1" 2 201 "0x1c"
d G "CCP_PWM_PLUS_2" 2 202 "0x2c"
d G "CCP_PWM_PLUS_3" 2 203 "0x3c"
d G "CCP_USE_TIMER3" 2 204 "0x100"
v G "CCP_1" 2 205 "int16"
d G "CCP_PWM_H_H" 2 210 "0x0c"
d G "CCP_PWM_H_L" 2 211 "0x0d"
d G "CCP_PWM_L_H" 2 212 "0x0e"
d G "CCP_PWM_L_L" 2 213 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 215 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 216 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 217 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 219 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 220 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 221 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 222 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 223 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 224 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 225 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 227 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 228 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 229 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 231 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 232 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 233 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 235 "0x80000000"
v G "CCP_2" 2 237 "int16"
v G "CCP_3" 2 241 "int16"
v G "CCP_4" 2 245 "int16"
v G "CCP_5" 2 249 "int16"
d G "T3_CCP1_TO_5" 2 255 "0x48"
d G "T3_CCP2_TO_5" 2 256 "0x8"
d G "T3_CCP3_TO_5" 2 257 "0x40"
d G "PSP_ENABLED" 2 264 "0x10"
d G "PSP_DISABLED" 2 265 "0"
d G "SPI_MASTER" 2 272 "0x20"
d G "SPI_SLAVE" 2 273 "0x24"
d G "SPI_L_TO_H" 2 274 "0"
d G "SPI_H_TO_L" 2 275 "0x10"
d G "SPI_CLK_DIV_4" 2 276 "0"
d G "SPI_CLK_DIV_16" 2 277 "1"
d G "SPI_CLK_DIV_64" 2 278 "2"
d G "SPI_CLK_T2" 2 279 "3"
d G "SPI_SS_DISABLED" 2 280 "1"
d G "SPI_SAMPLE_AT_END" 2 282 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 283 "0x4000"
d G "UART_ADDRESS" 2 289 "2"
d G "UART_DATA" 2 290 "4"
d G "UART_AUTODETECT" 2 291 "8"
d G "UART_AUTODETECT_NOWAIT" 2 292 "9"
d G "UART_WAKEUP_ON_RDA" 2 293 "10"
d G "UART_SEND_BREAK" 2 294 "13"
d G "F6_F5_F4_F5" 2 298 "0x70ff04"
d G "F6_F5_F4_F3_OUT_ON_F2_F1" 2 299 "0x78F903"
d G "F6_F5_F4_F5_OUT_ON_F2_F1" 2 300 "0x70F905"
d G "NC_NC_NC_NC" 2 301 "0x00ff07"
d G "F6_F5_F4_F3" 2 302 "0x78ff02"
d G "F6_F5_NC_NC_OUT_ON_F2" 2 303 "0x60FB01"
d G "F6_VR_F4_VR" 2 304 "0x50ff06"
d G "F5_VR_F3_VR" 2 305 "0x28ff0e"
d G "VREF_LOW" 2 313 "0xa0"
d G "VREF_HIGH" 2 314 "0x80"
d G "VREF_F5" 2 316 "0x40"
d G "VREF_COMP" 2 317 "0x10"
d G "OSC_PLL_ON" 2 322 "0x4000"
d G "OSC_PLL_OFF" 2 323 "0"
d G "OSC_INTRC" 2 324 "3"
d G "OSC_NORMAL" 2 325 "2"
d G "OSC_TIMER1" 2 326 "1"
d G "OSC_IDLE_ON_SLEEP" 2 327 "0x80"
d G "OSC_STATE_EXT_RUNNING" 2 329 "8"
d G "ADC_OFF" 2 336 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 337 "0x100"
d G "ADC_CLOCK_DIV_4" 2 338 "0x04"
d G "ADC_CLOCK_DIV_8" 2 339 "0x01"
d G "ADC_CLOCK_DIV_16" 2 340 "0x05"
d G "ADC_CLOCK_DIV_32" 2 341 "0x02"
d G "ADC_CLOCK_DIV_64" 2 342 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 343 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 345 "0x00"
d G "ADC_TAD_MUL_2" 2 346 "0x08"
d G "ADC_TAD_MUL_4" 2 347 "0x10"
d G "ADC_TAD_MUL_6" 2 348 "0x18"
d G "ADC_TAD_MUL_8" 2 349 "0x20"
d G "ADC_TAD_MUL_12" 2 350 "0x28"
d G "ADC_TAD_MUL_16" 2 351 "0x30"
d G "ADC_TAD_MUL_20" 2 352 "0x38"
d G "NO_ANALOGS" 2 355 "0x0F" "None"
d G "ALL_ANALOG" 2 357 "0x03" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5 F6"
d G "AN0_TO_AN10" 2 358 "0x04" "A0 A1 A2 A3 A5 F1 F2 F3 F4 F5"
d G "AN0_TO_AN9" 2 359 "0x05" "A0 A1 A2 A3 A5 F1 F2 F3 F4"
d G "AN0_TO_AN8" 2 360 "0x06" "A0 A1 A2 A3 A5 F1 F2 F3"
d G "AN0_TO_AN7" 2 361 "0x07" "A0 A1 A2 A3 A5 F1 F2"
d G "AN0_TO_AN6" 2 362 "0x08" "A0 A1 A2 A3 A5 F1"
d G "AN0_TO_AN5" 2 363 "0x09" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN4" 2 364 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 365 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 366 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 367 "0x0D" "A0 A1"
d G "AN0" 2 368 "0x0E" "A0"
d G "VSS_VDD" 2 372 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 373 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 374 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 375 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 379 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 380 "1"
d G "ADC_READ_ONLY" 2 381 "6"
d G "L_TO_H" 2 390 "0x40"
d G "H_TO_L" 2 391 "0"
d G "GLOBAL" 2 393 "0xF2C0"
d G "INT_RTCC" 2 394 "0xF220"
d G "INT_TIMER0" 2 395 "0xF220"
d G "INT_TIMER1" 2 396 "0x9D01"
d G "INT_TIMER2" 2 397 "0x9D02"
d G "INT_TIMER3" 2 398 "0xA002"
d G "INT_EXT" 2 399 "0xF210"
d G "INT_EXT1" 2 400 "0xF008"
d G "INT_EXT2" 2 401 "0xF010"
d G "INT_EXT3" 2 402 "0xF020"
d G "INT_RB" 2 403 "0xFFF208"
d G "INT_PSP" 2 404 "0x9D80"
d G "INT_AD" 2 405 "0x9D40"
d G "INT_RDA" 2 406 "0x9D20"
d G "INT_TBE" 2 407 "0x9D10"
d G "INT_SSP" 2 408 "0x9D08"
d G "INT_CCP1" 2 409 "0x9D04"
d G "INT_CCP2" 2 410 "0xA001"
d G "INT_BUSCOL" 2 411 "0xA008"
d G "INT_COMP" 2 412 "0xA040"
d G "INT_RDA2" 2 413 "0xA320"
d G "INT_TBE2" 2 414 "0xA310"
d G "INT_TIMER4" 2 415 "0xA308"
d G "INT_CCP3" 2 416 "0xA301"
d G "INT_CCP4" 2 417 "0xA302"
d G "INT_CCP5" 2 418 "0xA304"
d G "INT_OSCF" 2 419 "0xA080"
d G "INT_BUSCOL2" 2 420 "0xA340"
d G "INT_SSP2" 2 421 "0xA380"
D G "TRACE0" 1 40 "(format)"
D G "TRACE1" 1 41 "(format, arg1)"
D G "TRACE2" 1 42 "(format, arg1, arg2)"
D G "TRACE3" 1 43 "(format, arg1, arg2, arg3)"
D G "TRACE4" 1 44 "(format, arg1, arg2, arg3, arg4)"
D G "MATH_H" 3 21 ""
D G "PI" 3 26 "3.141592654"
D G "SQRT2" 3 29 "1.41421356"
C L "CEIL_FLOOR" 3 2 3 "FUNCTION"
V L "x" 3 36 "float"
V L "n" 3 36 "int8"
F G "CEIL_FLOOR" 3 37 "float(float x,int8 n)"
V L "y" 3 38 "float"
V L "res" 3 38 "float"
V L "l" 3 39 "int16"
V L "s" 3 40 "int1"
C L "floor" 3 2 3 "FUNCTION"
V L "x" 3 90 "float"
F G "floor" 3 91 "float(float x)"
C L "ceil" 3 2 3 "FUNCTION"
V L "x" 3 101 "float"
F G "ceil" 3 102 "float(float x)"
D G "fabs" 3 113 "abs"
C L "fmod" 3 2 6 "FUNCTION"
V L "x" 3 125 "float"
V L "y" 3 125 "float"
F G "fmod" 3 126 "float(float x,float y)"
V L "i" 3 127 "float"
D G "LN2" 3 145 "0.6931471806"
V G "pe" 3 147 "float[6]"
C L "exp" 3 2 3 "FUNCTION"
V L "x" 3 156 "float"
F G "exp" 3 157 "float(float x)"
V L "y" 3 158 "float"
V L "res" 3 158 "float"
V L "r" 3 158 "float"
V L "n" 3 159 "sint8"
V L "s" 3 160 "int1"
V G "pl" 3 199 "float[4]"
V G "ql" 3 200 "float[4]"
C L "log" 3 2 3 "FUNCTION"
V L "x" 3 208 "float"
F G "log" 3 209 "float(float x)"
V L "y" 3 210 "float"
V L "res" 3 210 "float"
V L "r" 3 210 "float"
V L "y2" 3 210 "float"
V L "n" 3 212 "sint8"
D G "LN10" 3 260 "2.30258509"
C L "log10" 3 2 3 "FUNCTION"
V L "x" 3 268 "float"
F G "log10" 3 269 "float(float x)"
V L "r" 3 270 "float"
C L "modf" 3 2 6 "FUNCTION"
V L "value" 3 287 "float"
V L "iptr" 3 287 "*float"
F G "modf" 3 288 "float(float value,*float iptr)"
C L "pwr" 3 2 3 "FUNCTION"
V L "x" 3 300 "float"
V L "y" 3 300 "float"
F G "pwr" 3 301 "float(float x,float y)"
C L "pow" 3 2 4 "FUNCTION"
V L "x" 3 317 "float"
V L "y" 3 317 "float"
F G "pow" 3 318 "float(float x,float y)"
C L "sqrt" 3 2 3 "FUNCTION"
V L "x" 3 331 "float"
F G "sqrt" 3 332 "float(float x)"
V L "y" 3 333 "float"
V L "res" 3 333 "float"
V L "p" 3 334 "*int8"
D G "PI_DIV_BY_TWO" 3 365 "1.570796326794896"
C L "cos" 3 2 3 "FUNCTION"
V L "x" 3 376 "float"
F G "cos" 3 377 "float(float x)"
V L "y" 3 378 "float"
V L "t" 3 378 "float"
V L "t2" 3 378 "float"
V L "quad" 3 379 "int8"
V L "i" 3 379 "int8"
V L "frac" 3 380 "float"
V L "p" 3 381 "float[4]"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "sin" 3 2 3 "FUNCTION"
V L "x" 3 421 "float"
F G "sin" 3 422 "float(float x)"
C L "tan" 3 2 3 "FUNCTION"
V L "x" 3 432 "float"
F G "tan" 3 433 "float(float x)"
V L "c" 3 434 "float"
V L "s" 3 434 "float"
V G "pas" 3 446 "float[3]"
V G "qas" 3 447 "float[3]"
V L "x" 3 449 "float"
V L "n" 3 449 "int8"
F G "ASIN_COS" 3 450 "float(float x,int8 n)"
V L "y" 3 451 "float"
V L "res" 3 451 "float"
V L "r" 3 451 "float"
V L "y2" 3 451 "float"
V L "s" 3 452 "int1"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "asin" 3 2 3 "FUNCTION"
V L "x" 3 501 "float"
F G "asin" 3 502 "float(float x)"
V L "r" 3 503 "float"
C L "acos" 3 2 3 "FUNCTION"
V L "x" 3 516 "float"
F G "acos" 3 517 "float(float x)"
V L "r" 3 518 "float"
V G "pat" 3 524 "float[4]"
V G "qat" 3 525 "float[4]"
C L "atan" 3 2 3 "FUNCTION"
V L "x" 3 533 "float"
F G "atan" 3 534 "float(float x)"
V L "y" 3 535 "float"
V L "res" 3 535 "float"
V L "r" 3 535 "float"
V L "s" 3 536 "int1"
V L "flag" 3 536 "int1"
C L "atan" 3 2 1 "FUNCTION"
C L "atan2" 3 2 5 "FUNCTION"
V L "y" 3 583 "float"
V L "x" 3 583 "float"
F G "atan2" 3 584 "float(float y,float x)"
V L "z" 3 585 "float"
V L "sign" 3 586 "int1"
V L "quad" 3 587 "int8"
C L "atan2" 3 2 1 "FUNCTION"
C L "atan2" 3 2 1 "FUNCTION"
C L "cosh" 3 2 5 "FUNCTION"
V L "x" 3 662 "float"
F G "cosh" 3 663 "float(float x)"
C L "sinh" 3 2 4 "FUNCTION"
V L "x" 3 675 "float"
F G "sinh" 3 676 "float(float x)"
C L "tanh" 3 2 4 "FUNCTION"
V L "x" 3 689 "float"
F G "tanh" 3 690 "float(float x)"
D G "LOG2" 3 707 ".30102999566398119521"
V L "x" 3 708 "float"
V L "exp" 3 708 "*sint8"
F G "frexp" 3 709 "float(float x,*sint8 exp)"
V L "res" 3 710 "float"
V L "sign" 3 711 "int1"
C L "ldexp" 3 2 4 "FUNCTION"
V L "value" 3 760 "float"
V L "exp" 3 760 "sint8"
F G "ldexp" 3 761 "float(float value,sint8 exp)"
D G "LCD_WRX" 4 6 "PIN_D0"
D G "LCD_DC" 4 7 "PIN_D1"
D G "LCD_CSX" 4 8 "PIN_D2"
D G "LCD_RESX" 4 9 "PIN_D3"
D G "LCD_DATAOUT" 4 13 "(data)      output_e(data)"
D G "LCDCMD_NOP" 4 15 "0x00"
D G "LCDCMD_SWRESET" 4 16 "0x01"
D G "LCDCMD_SLPIN" 4 17 "0x10" "Sleep in"
D G "LCDCMD_SLPOUT" 4 18 "0x11" "Sleep out"
D G "LCDCMD_PTLON" 4 19 "0x12" "Partial Mode On"
D G "LCDCMD_NORON" 4 20 "0x13" "Normal Mode On"
D G "LCDCMD_DSPOFF" 4 21 "0x28" "Display Off"
D G "LCDCMD_DSPON" 4 22 "0x29" "Display On"
D G "LCDCMD_CASET" 4 23 "0x2A" "Column address set"
D G "LCDCMD_PASET" 4 24 "0x2B" "Page address set"
D G "LCDCMD_RAMWR" 4 25 "0x2C" "Memory Write"
D G "LCDCMD_RGBSET" 4 26 "0x2D" "RGB table set"
D G "LCDCMD_IDMOFF" 4 27 "0x38" "Idle mode off"
D G "LCDCMD_IDMON" 4 28 "0x39" "Idle mode On"
D G "LCDCMD_COLMOD" 4 29 "0x3A" "Interface pixel format"
D G "LCDCMD_MADCTL" 4 30 "0x36"
D G "MADCTL_HORIZ" 4 33 "0xA8"
D G "MADCTL_VERT" 4 34 "0x68"
D G "LCD_WIDTH" 4 36 "208"
D G "LCD_HEIGHT" 4 37 "176"
V G "lcd_x" 4 39 "int8"
V G "lcd_y" 4 40 "int8"
V G "bkgColor" 4 41 "int16"
V G "textColor" 4 42 "int16"
V L "data" 4 44 "int8"
F G "LCD_WriteData" 4 45 "void(int8 data)"
D G "FAST_WRITE" 4 54 "(data)   LCD_DATAOUT(data);output_low(LCD_WRX);output_high(LCD_WRX);"
V L "command" 4 56 "int8"
F G "LCD_WriteCommand" 4 57 "void(int8 command)"
V L "left" 4 66 "int8"
V L "top" 4 66 "int8"
V L "right" 4 66 "int8"
V L "bottom" 4 66 "int8"
F G "LCD_SetWindow" 4 67 "void(int8 left,int8 top,int8 right,int8 bottom)"
C L "LCD_SleepIn" 4 2 1 "FUNCTION"
F G "LCD_SleepIn" 4 82 "void()"
F G "LCD_SleepOut" 4 87 "void()"
C L "LCD_IdleMode" 4 2 1 "FUNCTION"
F G "LCD_IdleMode" 4 93 "void()"
C L "LCD_NormalMode" 4 2 1 "FUNCTION"
F G "LCD_NormalMode" 4 100 "void()"
F G "LCD_PartialMode" 4 106 "void()"
F G "LCD_DisplayOff" 4 112 "void()"
F G "LCD_Shutdown" 4 120 "void()"
F G "LCD_Init" 4 128 "void()"
V L "i" 4 129 "int8"
C L "LCD_Init" 4 2 2 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 2 "FUNCTION"
C L "LCD_Init" 4 2 2 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 2 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
C L "LCD_Init" 4 2 1 "FUNCTION"
V G "charMap8x14" 5 1 "int8[1]" "0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,"
V L "x" 4 185 "int8"
V L "y" 4 185 "int8"
F G "LCD_Gotoxy" 4 186 "void(int8 x,int8 y)"
F G "LCD_NewLine" 4 191 "void()"
V L "nColor" 4 198 "int16"
F G "LCD_SetTextColor" 4 199 "void(int16 nColor)"
V L "nColor" 4 203 "int16"
F G "LCD_SetBackgroundColor" 4 204 "void(int16 nColor)"
V L "left" 4 208 "int8"
V L "top" 4 208 "int8"
V L "right" 4 208 "int8"
V L "bottom" 4 208 "int8"
V L "color" 4 208 "int16"
F G "gps_FloodFill" 4 209 "void(int8 left,int8 top,int8 right,int8 bottom,int16 color)"
V L "i" 4 210 "int16"
V L "numPixel" 4 210 "int16" "select controller"
F G "LCD_ClearScreen" 4 229 "void()"
V L "i" 4 230 "int16" "LCD_Floor(0,0, LCD_WIDTH-1, LCD_HEIGHT-1, bkgColor);"
C L "LCD_ClearScreen" 4 232 2 "FUNCTION"
C L "LCD_OutChar8" 4 249 1 "*"
C L "LCD_OutChar8" 4 249 1 "*"
C L "LCD_OutChar8" 4 249 1 "*"
V L "data" 4 256 "int8"
F G "LCD_OutChar8" 4 257 "void(int8 data)"
V L "i" 4 258 "int8"
V L "j" 4 258 "int8"
V L "byteToShift" 4 258 "int8"
V L "mapOffset" 4 259 "int16" "select controller"
C L "LCD_OutChar8" 4 249 1 "FUNCTION"
C L "LCD_OutChar8" 4 249 1 "FUNCTION"
C L "LCD_OutChar8" 4 249 1 "FUNCTION"
V L "data" 4 302 "int8"
F G "LCD_PutChar" 4 303 "void(int8 data)"
D G "MAXFILES" 6 1 "1"
D G "DIR_BUFFER" 6 7 "gFiles[hFile].DIRbuffer"
T G "diskinforec" 6 32 "{int8[3] JumpCode,int8[8] OEMName,int16 BytsPerSec,int8 SecPerClus,int16 RsvdSecCnt,int8 NumFATs,int16 RootEntCnt,int16 TotSec16,int8 Media,int16 FATSz16,int16 SecPerTrk,int16 NumHeads,int32 HiddSec,int32 TotSec32,int32 FATSz32,int16 ExtFlags,int16 FSVer,int32 RootClus}"
T G "DIR" 6 45 "{int8[8] sName,int8[3] sExt,int8 bAttr,int8[8] bReserved,int16 hClusterH,int16 hTime,int16 hDate,int16 hCluster,int32 wSize}"
T G "FILE" 6 62 "{int8[512] IObuffer,int8[512] DIRbuffer,DIR DirEntry,int32 CurrentCluster,int8 SecInCluster,int16 posinsector,int32 wFileSize,int32 dirSector,int16 dirIdx,int8 mode,int8 Free}"
T G "FAT32Vars" 6 77 "{int32 MMCAddress,int32 FATstartidx,int32 gStartSector,int32 gFirstDataSector,int16 gDirEntryIdx,int32 gDirEntrySector,int16 gFirstEmptyDirEntry,int32 gFirstDirEntryCluster,int32 nRootDirSectors,int32 nFatSize,int8 bFATModified}"
D G "HANDLE" 6 79 "char"
F G "InitFAT" 6 81 "int8()"
V L "fname" 6 82 "*int8"
V L "hFile" 6 82 "int8"
F G "FindDirEntry" 6 82 "int8(*int8 fname,int8 hFile)"
V L "fname" 6 84 "*int8"
V L "mode" 6 84 "int8"
F G "fopen" 6 84 "int8(*int8 fname,int8 mode)"
V L "hFile" 6 85 "int8"
F G "fclose" 6 85 "void(int8 hFile)"
V L "hFile" 6 86 "int8"
F G "fflush" 6 86 "void(int8 hFile)"
V L "fname" 6 87 "*int8"
V L "hFile" 6 87 "int8"
F G "cwd" 6 87 "int8(*int8 fname,int8 hFile)"
V L "ch" 6 88 "int8"
V L "hFile" 6 88 "int8"
F G "fputch" 6 88 "void(int8 ch,int8 hFile)"
V L "ch" 6 89 "int8"
F G "fputchar" 6 89 "void(int8 ch)"
V L "ch" 6 90 "*int8"
V L "hFile" 6 90 "int8"
F G "fgetch" 6 90 "int8(*int8 ch,int8 hFile)"
V L "str" 6 91 "*int8"
V L "hFile" 6 91 "int8"
F G "fputstring" 6 91 "void(*int8 str,int8 hFile)" "fputs is reserved in CCS C"
V L "buffer" 6 92 "*int8"
V L "leng" 6 92 "int16"
V L "hFile" 6 92 "int8"
F G "fread" 6 92 "int16(*int8 buffer,int16 leng,int8 hFile)"
V L "buffer" 6 93 "*int8"
V L "leng" 6 93 "int16"
V L "hFile" 6 93 "int8"
F G "fwrite" 6 93 "void(*int8 buffer,int16 leng,int8 hFile)"
V L "fname" 6 94 "*int8"
F G "remove" 6 94 "int8(*int8 fname)"
V L "fname" 6 95 "*int8"
V L "fsiz" 6 95 "*int32"
F G "getfsize" 6 95 "int8(*int8 fname,*int32 fsiz)" "(C) Copyright 1996,2003 Custom Computer Services            ////"
D G "_STRING" 8 12 ""
D G "_STDDEF" 9 13 ""
D G "ptrdiff_t" 9 18 "long"
D G "size_t" 9 21 "int"
D G "wchar_t" 9 22 "char"
D G "NULL" 9 23 "0"
D G "offsetof" 9 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 10 12 ""
D G "islower" 10 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 10 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 10 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 10 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 10 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 10 19 "(x)  ((x)==' ')"
D G "isxdigit" 10 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 10 21 "(x)  ((x)<' ')"
D G "isprint" 10 22 "(x)  ((x)>=' ')"
D G "isgraph" 10 23 "(x)  ((x)>' ')"
D G "ispunct" 10 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "getfsize" 8 19 10 "FUNCTION"
V L "s1" 8 34 "*int8"
V L "s2" 8 34 "*int8"
V L "n" 8 34 "int8"
F G "memmove" 8 35 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "sc1" 8 36 "*int8"
V L "sc2" 8 37 "*int8"
C L "strcopy" 8 19 3 "FUNCTION"
V L "s1" 8 53 "*int8"
V L "s2" 8 53 "*int8"
F G "strcopy" 8 54 "*int8(*int8 s1,*int8 s2)"
V L "s" 8 55 "*int8"
C L "strncpy" 8 19 4 "FUNCTION"
V L "s1" 8 69 "*int8"
V L "s2" 8 69 "*int8"
V L "n" 8 69 "int8"
F G "strncpy" 8 70 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 8 71 "*int8"
C L "strcat" 8 19 3 "FUNCTION"
V L "s1" 8 86 "*int8"
V L "s2" 8 86 "*int8"
F G "strcat" 8 87 "*int8(*int8 s1,*int8 s2)"
V L "s" 8 88 "*int8"
C L "strncat" 8 19 2 "FUNCTION"
V L "s1" 8 104 "*int8"
V L "s2" 8 104 "*int8"
V L "n" 8 104 "int8"
F G "strncat" 8 105 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 8 106 "*int8"
C L "memcmp" 8 19 3 "FUNCTION"
V L "s1" 8 128 "*int8"
V L "s2" 8 128 "*int8"
V L "n" 8 128 "int8"
F G "memcmp" 8 129 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "su1" 8 130 "*int8"
V L "su2" 8 130 "*int8"
C L "strcmp" 8 19 2 "FUNCTION"
V L "s1" 8 142 "*int8"
V L "s2" 8 142 "*int8"
F G "strcmp" 8 143 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 8 19 2 "FUNCTION"
V L "s1" 8 152 "*int8"
V L "s2" 8 152 "*int8"
F G "strcoll" 8 153 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 8 19 4 "FUNCTION"
V L "s1" 8 165 "*int8"
V L "s2" 8 165 "*int8"
V L "n" 8 165 "int8"
F G "strncmp" 8 166 "sint8(*int8 s1,*int8 s2,int8 n)"
C L "strxfrm" 8 19 3 "FUNCTION"
V L "s1" 8 177 "*int8"
V L "s2" 8 177 "*int8"
V L "n" 8 177 "int8"
F G "strxfrm" 8 178 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s" 8 179 "*int8"
V L "n1" 8 180 "int8"
C L "memchr" 8 19 3 "FUNCTION"
V L "s" 8 199 "*int8"
V L "c" 8 199 "int8"
V L "n" 8 199 "int8"
F G "memchr" 8 200 "*int8(*int8 s,int8 c,int8 n)"
V L "uc" 8 201 "int8"
V L "su" 8 202 "*int8"
C L "strchr" 8 19 2 "FUNCTION"
V L "s" 8 213 "*int8"
V L "c" 8 213 "int8"
F G "strchr" 8 214 "*int8(*int8 s,int8 c)"
C L "strcspn" 8 19 4 "FUNCTION"
V L "s1" 8 225 "*int8"
V L "s2" 8 225 "*int8"
F G "strcspn" 8 226 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 8 227 "*int8"
V L "sc2" 8 227 "*int8"
C L "strpbrk" 8 19 4 "FUNCTION"
V L "s1" 8 240 "*int8"
V L "s2" 8 240 "*int8"
F G "strpbrk" 8 241 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 8 242 "*int8"
V L "sc2" 8 242 "*int8"
C L "strrchr" 8 19 2 "FUNCTION"
V L "s" 8 255 "*int8"
V L "c" 8 255 "int8"
F G "strrchr" 8 256 "*int8(*int8 s,int8 c)"
V L "p" 8 257 "*int8"
C L "strspn" 8 19 2 "FUNCTION"
V L "s1" 8 270 "*int8"
V L "s2" 8 270 "*int8"
F G "strspn" 8 271 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 8 272 "*int8"
V L "sc2" 8 272 "*int8"
C L "strstr" 8 19 6 "FUNCTION"
V L "s1" 8 289 "*int8"
V L "s2" 8 289 "*int8"
F G "strstr" 8 290 "*int8(*int8 s1,*int8 s2)"
V L "s" 8 291 "*int8"
V L "t" 8 291 "*int8"
C L "strtok" 8 19 13 "FUNCTION"
V L "s1" 8 328 "*int8"
V L "s2" 8 328 "*int8"
F G "strtok" 8 329 "*int8(*int8 s1,*int8 s2)"
V L "beg" 8 330 "*int8"
V L "end" 8 330 "*int8"
V L "save" 8 331 "*int8"
C L "strlen" 8 19 6 "FUNCTION"
V L "s" 8 377 "*int8"
F G "strlen" 8 378 "*int8(*int8 s)"
V L "sc" 8 379 "*int8"
C L "stricmp" 8 19 2 "FUNCTION"
V L "s1" 8 388 "*int8"
V L "s2" 8 388 "*int8"
F G "stricmp" 8 389 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 8 19 3 "FUNCTION"
V L "s" 8 402 "*int8"
F G "strlwr" 8 403 "*int8(*int8 s)"
V L "p" 8 404 "*int8"
V G "FATTable" 7 7 "{int32[128] FAT32,int16[256] FAT16}"
T G "TimeRecord" 7 17 "{int16 tm_year,int8 tm_mon,int8 tm_day,int8 tm_mday,int8 tm_hour,int8 tm_min,int8 tm_sec}"
V G "myrec" 7 18 "TimeRecord"
V G "gFirstEmptyCluster" 7 20 "int32"
V G "gFAT32Vars" 7 22 "FAT32Vars"
V G "DiskInfo" 7 23 "diskinforec"
V G "gFiles" 7 24 "FILE[1]"
V G "gFATErrCode" 7 25 "int8"
V G "sFATName" 7 47 "int8[4][6]"
V G "gFATType" 7 48 "int8"
D G "MMC_NO_ERR" 11 1 "0"
D G "MMC_READ_GEN_ERR" 11 2 "0x10"
D G "MMC_READ_INVALID_ERR" 11 3 "0x11	" "Invalid sector address"
D G "MMC_READ_TOKEN_ERR" 11 4 "0x12	"
D G "MMC_WRITE_GEN_ERR" 11 5 "0x20"
D G "MMC_WRITE_SEC0_ERR" 11 6 "0x21	" "Attempt to write sector #0"
D G "MMC_WRITE_INVALID_ERR" 11 7 "0x22	" "Invalid sector address"
D G "MMC_INIT_RESET_ERR" 11 8 "0x30"
D G "MMC_INIT_IDLE_ERR" 11 9 "0x31"
V L "max_tries" 11 11 "int8"
F G "Init_MMC" 11 11 "int8(int8 max_tries)"
V L "sector" 11 12 "int32"
V L "buff" 11 12 "*int8"
F G "ReadSector" 11 12 "int8(int32 sector,*int8 buff)" "Read 512 bytes to buff"
V L "sector" 11 13 "int32"
V L "buff" 11 13 "*int8"
F G "WriteSector" 11 13 "int8(int32 sector,*int8 buff)" "Write 512 bytes from buff"
D G "ChipSel" 12 3 "pin_c2"
D G "ChipClk" 12 4 "pin_c3"
D G "ChipDin" 12 5 "pin_c5"
D G "NO_MMC_CARD" 12 12 "input(CardInserted)"
V L "cmd" 12 15 "int8"
V L "address" 12 15 "int32"
V L "tries" 12 15 "int8"
V L "valid" 12 15 "int8"
V L "invalid" 12 15 "int8"
F G "mmc_cmd" 12 16 "int8(int8 cmd,int32 address,int8 tries,int8 valid,int8 invalid)"
V L "i" 12 17 "int8"
V L "r1" 12 17 "int8"
C L "mmc_cmd" 12 7 7 "FUNCTION"
C L "mmc_cmd" 12 7 3 "FUNCTION"
V L "max_tries" 12 50 "int8"
F G "Init_MMC" 12 51 "int8(int8 max_tries)"
V L "i" 12 52 "int8"
V L "tries" 12 52 "int8"
V L "c" 12 52 "int8"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 1 "FUNCTION"
C L "Init_MMC" 12 7 2 "FUNCTION"
V L "response" 12 100 "int8"
F G "mmc_response" 12 101 "int8(int8 response)"
V L "count" 12 102 "int16"
C L "mmc_response" 12 7 1 "FUNCTION"
C L "mmc_response" 12 7 1 "FUNCTION"
C L "mmc_response" 12 7 1 "FUNCTION"
V L "sector" 12 113 "int32"
V L "buff" 12 113 "*int8"
F G "ReadSector" 12 114 "int8(int32 sector,*int8 buff)"
V L "r1" 12 115 "int8"
V L "i" 12 116 "int16"
V L "iw" 12 116 "int16" "/ allows large gt 255 buff size addressing"
C L "ReadSector" 12 7 1 "FUNCTION"
C L "ReadSector" 12 7 1 "FUNCTION"
C L "ReadSector" 12 7 1 "FUNCTION"
C L "ReadSector" 12 7 1 "FUNCTION"
V L "sector" 12 177 "int32"
V L "buff" 12 177 "*int8"
F G "WriteSector" 12 179 "int8(int32 sector,*int8 buff)"
V L "r1" 12 180 "int8"
V L "i" 12 181 "int16"
C L "WriteSector" 12 7 1 "FUNCTION"
C L "WriteSector" 12 7 1 "FUNCTION"
C L "WriteSector" 12 7 1 "FUNCTION"
C L "WriteSector" 12 7 1 "FUNCTION"
V L "ch" 7 54 "*int8"
F G "IsSelfDir" 7 55 "int8(*int8 ch)"
F G "GetCurrentDOSDate" 7 62 "int16()"
V L "retval" 7 63 "int16"
F G "GetCurrentDOSTime" 7 73 "int16()"
V L "retval" 7 74 "int16"
F G "InitFAT" 7 84 "int8()"
V L "actsector" 7 85 "int32"
V L "nTotalSec" 7 86 "int32"
V L "nDataSec" 7 86 "int32"
V L "nCountofClusters" 7 86 "int32"
V L "i" 7 87 "int8"
C L "InitFAT" 7 94 2 "FUNCTION"
C L "InitFAT" 7 94 1 "FUNCTION"
C L "InitFAT" 7 94 1 "FUNCTION"
C L "InitFAT" 7 94 2 "FUNCTION"
C L "InitFAT" 7 94 2 "FUNCTION"
F G "SaveFATTable" 7 161 "void()"
V L "actsector" 7 162 "int32"
V L "curcluster" 7 172 "int32"
F G "GetNextCluster" 7 173 "int32(int32 curcluster)"
V L "actsector" 7 174 "int32"
V L "clpage" 7 175 "int32"
V L "clpos" 7 176 "int8"
C L "GetNextCluster" 7 94 1 "FUNCTION"
C L "GetNextCluster" 7 94 1 "FUNCTION"
C L "GetNextCluster" 7 94 1 "FUNCTION"
V L "curcluster" 7 215 "int32"
V L "value" 7 215 "int32"
F G "SetClusterEntry" 7 216 "void(int32 curcluster,int32 value)"
V L "actsector" 7 217 "int32"
V L "clpage" 7 218 "int32"
V L "clpos" 7 219 "int8"
C L "SetClusterEntry" 7 94 1 "FUNCTION"
C L "SetClusterEntry" 7 94 1 "FUNCTION"
C L "SetClusterEntry" 7 94 2 "FUNCTION"
C L "SetClusterEntry" 7 94 1 "FUNCTION"
C L "SetClusterEntry" 7 94 1 "FUNCTION"
C L "SetClusterEntry" 7 94 3 "FUNCTION"
V L "curcluster" 7 263 "int32"
F G "ClearClusterEntry" 7 264 "void(int32 curcluster)"
V L "actsector" 7 265 "int32"
V L "clpage" 7 266 "int32"
V L "clpos" 7 267 "int8"
C L "ClearClusterEntry" 7 94 1 "FUNCTION"
C L "ClearClusterEntry" 7 94 1 "FUNCTION"
F G "FindFirstFreeCluster" 7 305 "int32()"
V L "i" 7 306 "int32"
V L "st" 7 306 "int32"
V L "actsector" 7 306 "int32"
V L "retval" 7 306 "int32"
V L "j" 7 307 "int16"
C L "FindFirstFreeCluster" 7 94 1 "FUNCTION"
C L "FindFirstFreeCluster" 7 94 1 "FUNCTION"
V L "beDir" 7 364 "*DIR"
V L "name" 7 364 "*int8"
F G "ConvertFilename" 7 365 "void(*DIR beDir,*int8 name)"
V L "i" 7 366 "int8"
V L "j" 7 366 "int8"
V L "c" 7 366 "int8"
V L "pDir" 7 384 "*DIR"
V L "fname" 7 384 "*int8"
F G "GetDOSName" 7 385 "void(*DIR pDir,*int8 fname)"
V L "i" 7 386 "int8"
V L "j" 7 386 "int8"
V L "leng" 7 386 "int8"
V L "c" 7 386 "int8"
V L "toext" 7 386 "int8"
C L "ReadRootDirectory" 7 94 1 "FUNCTION"
V L "hFile" 7 408 "int8"
F G "ReadRootDirectory" 7 409 "void(int8 hFile)"
V L "actsector" 7 410 "int32"
C L "FindDirEntry" 7 94 1 "FUNCTION"
V L "fname" 7 429 "*int8"
V L "hFile" 7 429 "int8"
F G "FindDirEntry" 7 430 "int8(*int8 fname,int8 hFile)"
V L "pDir" 7 431 "*DIR"
V L "i" 7 432 "int16"
V L "filename" 7 433 "int8[16]"
V L "nextcluster" 7 434 "int32"
V L "actsector" 7 434 "int32"
V L "nSecInClus" 7 435 "int8"
V L "bDone" 7 436 "int8"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "FindDirEntry" 7 94 1 "FUNCTION"
C L "TryFile" 7 94 1 "FUNCTION"
V L "fname" 7 524 "*int8"
V L "hFile" 7 524 "*int8"
F G "TryFile" 7 525 "*int8(*int8 fname,*int8 hFile)"
V L "i" 7 526 "int8"
V L "leng" 7 526 "int8"
V L "filename" 7 527 "*int8"
V L "hFile" 7 562 "int8"
V L "fname" 7 562 "*int8"
F G "fcreate" 7 563 "int8(int8 hFile,*int8 fname)"
V L "pDir" 7 564 "*DIR"
V L "actsector" 7 565 "int32"
V L "actcl" 7 565 "int32"
V L "i" 7 566 "int16"
C L "fcreate" 7 94 1 "FUNCTION"
C L "fcreate" 7 94 1 "FUNCTION"
C L "fcreate" 7 94 1 "FUNCTION"
C L "fcreate" 7 94 1 "FUNCTION"
C L "fcreate" 7 94 1 "FUNCTION"
V L "hFile" 7 641 "int8"
F G "ComposeCluster" 7 642 "int32(int8 hFile)"
V L "retval" 7 643 "int32"
V L "fname" 7 651 "*int8"
V L "mode" 7 651 "int8"
F G "fopen" 7 652 "int8(*int8 fname,int8 mode)"
V L "found" 7 653 "int8"
V L "hFile" 7 654 "int8"
V L "actsector" 7 655 "int32"
V L "actcluster" 7 655 "int32"
V L "nextcluster" 7 655 "int32"
V L "filename" 7 656 "*int8" "if (NO_MMC_CARD)"
C L "fopen" 7 94 1 "FUNCTION"
C L "fopen" 7 94 1 "FUNCTION"
C L "fopen" 7 94 1 "FUNCTION"
C L "fopen" 7 94 1 "FUNCTION"
C L "fopen" 7 94 1 "FUNCTION"
V L "hFile" 7 731 "int8"
F G "fclose" 7 732 "void(int8 hFile)" "output_low(YELLOWLED);"
V L "hFile" 7 744 "int8"
F G "fflush" 7 745 "void(int8 hFile)"
V L "actsector" 7 746 "int32"
V L "pDir" 7 747 "*DIR"
C L "fflush" 7 94 1 "FUNCTION"
C L "fflush" 7 94 1 "FUNCTION"
C L "fflush" 7 94 1 "FUNCTION"
C L "fflush" 7 94 1 "FUNCTION"
C L "fflush" 7 94 1 "FUNCTION"
C L "fflush" 7 94 1 "FUNCTION"
V L "fname" 7 787 "*int8"
V L "hFile" 7 787 "int8"
F G "cwd" 7 788 "int8(*int8 fname,int8 hFile)"
V L "actsector" 7 789 "int32"
C L "cwd" 7 94 1 "FUNCTION"
C L "cwd" 7 94 1 "FUNCTION"
C L "cwd" 7 94 1 "FUNCTION"
C L "cwd" 7 94 1 "FUNCTION"
V L "ch" 7 809 "int8"
V L "hFile" 7 809 "int8"
F G "fputch" 7 810 "void(int8 ch,int8 hFile)"
V L "nextcluster" 7 811 "int32"
V L "actsector" 7 811 "int32"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
C L "fputch" 7 94 1 "FUNCTION"
V L "str" 7 872 "*int8"
V L "hFile" 7 872 "int8"
F G "fputstring" 7 873 "void(*int8 str,int8 hFile)"
V L "buffer" 7 886 "*int8"
V L "leng" 7 886 "int16"
V L "hFile" 7 886 "int8"
F G "fread" 7 887 "int16(*int8 buffer,int16 leng,int8 hFile)"
V L "i" 7 888 "int16"
V L "retv" 7 888 "int16"
V L "c" 7 889 "int8"
V L "v" 7 889 "int8"
V L "buffer" 7 907 "*int8"
V L "leng" 7 907 "int16"
V L "hFile" 7 907 "int8"
F G "fwrite" 7 908 "void(*int8 buffer,int16 leng,int8 hFile)"
V L "i" 7 909 "int16"
V L "ch" 7 921 "*int8"
V L "hFile" 7 921 "int8"
F G "fgetch" 7 922 "int8(*int8 ch,int8 hFile)"
V L "nextcluster" 7 923 "int32"
V L "actsector" 7 923 "int32"
C L "fgetch" 7 94 1 "FUNCTION"
C L "fgetch" 7 94 1 "FUNCTION"
C L "fgetch" 7 94 1 "FUNCTION"
C L "fgetch" 7 94 1 "FUNCTION"
V L "fname" 7 963 "*int8"
F G "remove" 7 964 "int8(*int8 fname)"
V L "i" 7 965 "int8"
V L "found" 7 965 "int8"
V L "hFile" 7 966 "int8"
V L "pDir" 7 967 "*DIR"
V L "nextcluster" 7 968 "int32"
V L "CurrentCluster" 7 968 "int32"
V L "filename" 7 969 "*int8"
C L "remove" 7 94 4 "FUNCTION"
V L "fname" 7 1003 "*int8"
V L "fsiz" 7 1003 "*int32"
F G "getfsize" 7 1004 "int8(*int8 fname,*int32 fsiz)"
V L "found" 7 1005 "int8"
V L "hFile" 7 1006 "int8"
V L "pDir" 7 1007 "*DIR"
V L "filename" 7 1008 "*int8"
C L "getfsize" 7 94 1 "FUNCTION"
V G "hFile" 0 7 "int8"
V G "gfilename" 0 8 "int8[32]"
D G "LCD_BKLT" 0 10 "PIN_G0"
D G "SENSOR_ENX" 0 11 "PIN_F7"
D G "BT_RST" 0 12 "PIN_G4"
D G "MEM_CS" 0 13 "PIN_F6"
D G "HMC_RESET" 0 14 "PIN_F5"
D G "POWER_OFF" 0 15 "PIN_F2"
D G "CHARGE_IND" 0 16 "PIN_A5"
D G "GPS_EN" 0 17 "PIN_A4"
D G "SD_DETECT" 0 18 "PIN_D4"
D G "SD_PWR" 0 19 "PIN_D7"
D G "KEY_POWER" 0 20 "PIN_B0"
D G "KEY_DOWN" 0 21 "PIN_B1"
D G "KEY_CENTER" 0 22 "PIN_B2"
D G "KEY_LEFT" 0 23 "PIN_B3"
D G "KEY_RIGHT" 0 24 "PIN_B4"
D G "KEY_UP" 0 25 "PIN_B5"
D G "SD_CS" 0 26 "PIN_C2"
D G "ADCCH_BATT" 0 28 "0" "ADC Channel: Battery voltage"
D G "ADCCH_HMCA" 0 29 "1" "ADC Channel: HMC Out A"
D G "ADCCH_HMCB" 0 30 "2" "ADC Channel: HMC Out B"
D G "ADCCH_TEMP" 0 31 "3" "ADC Channel: Temperature"
V G "fVLDO" 0 33 "float"
V G "fStandardPressure" 0 35 "float"
D G "ADS11XX_H" 13 2 ""
D G "ADS11XX_SINGLE_CONVERSION" 13 6 "0x10"
D G "ADS11XX_CONTINUOUS_CONVERSION" 13 7 "0x00"
D G "ADS11XX_12_BITS" 13 10 "0x00	" "128 SPS"
D G "ADS11XX_14_BITS" 13 11 "0x04	" "32 SPS"
D G "ADS11XX_15_BITS" 13 12 "0x08	" "16 SPS"
D G "ADS11XX_16_BITS" 13 13 "0x0C	" "8 SPS"
D G "ADS11XX_PGA_1" 13 16 "0x00"
D G "ADS11XX_PGA_2" 13 17 "0x01"
D G "ADS11XX_PGA_4" 13 18 "0x02"
D G "ADS11XX_PGA_8" 13 19 "0x03"
D G "ADS11XX_INP_0" 13 22 "0x00	" "AIN0, AIN1"
D G "ADS11XX_INP_1" 13 23 "0x20	" "AIN2, AIN3"
D G "ADS11XX_INP_2" 13 24 "0x40	" "AIN0, AIN3"
D G "ADS11XX_INP_3" 13 25 "0x60	" "AIN1, AIN3"
V L "nAddress" 13 28 "int8"
V L "configByte" 13 28 "int8"
F G "ADS11XX_Init" 13 29 "void(int8 nAddress,int8 configByte)"
C L "ADS11XX_Init" 13 5 1 "FUNCTION"
V L "nAddress" 13 38 "int8"
F G "ADS11XX_ReadConfig" 13 39 "int8(int8 nAddress)"
V L "tmp" 13 40 "int8"
C L "ADS11XX_ReadConfig" 13 5 1 "FUNCTION"
C L "ADS11XX_ReadConfig" 13 5 1 "FUNCTION"
C L "ADS11XX_ReadConfig" 13 5 1 "FUNCTION"
V L "nAddress" 13 56 "int8"
F G "ADS11XX_ReadData" 13 57 "int16(int8 nAddress)"
V L "ad_val" 13 58 "int16"
V L "tmp" 13 59 "int8"
C L "ADS11XX_ReadData" 13 5 1 "FUNCTION"
C L "ADS11XX_ReadData" 13 5 1 "FUNCTION"
C L "ADS11XX_ReadData" 13 5 1 "FUNCTION"
C L "ADS11XX_ReadData" 13 5 1 "FUNCTION"
D G "ADS1112_ADDRESS" 0 39 "0x9A"
D G "ADS1112_CONFIG" 0 40 " (ADS11XX_CONTINUOUS_CONVERSION | ADS11XX_16_BITS | ADS11XX_PGA_8)"
V G "g_nKeyNewState" 0 42 "int8"
D G "KB_POWER" 0 43 "0x01"
D G "KB_DOWN" 0 44 "0x02"
D G "KB_CENTER" 0 45 "0x04"
D G "KB_LEFT" 0 46 "0x08"
D G "KB_RIGHT" 0 47 "0x10"
D G "KB_UP" 0 48 "0x20"
V G "g_bBKLight" 0 50 "int8"
V G "nLEDTimer" 0 51 "int16"
V G "nSampleTimer" 0 52 "int8"
V G "g_nTimerTick" 0 53 "int16"
V G "g_nPwrBtnHoldTick" 0 54 "int16"
D G "_STDLIB" 16 12 ""
D G "RAND_MAX" 16 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 16 24 "1"
T G "div_t" 16 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 16 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atof" 9 3 6 "FUNCTION"
C L "atof" 16 43 2 "FUNCTION"
C L "atof" 16 46 1 "*"
C L "atof" 16 46 1 "*"
V L "s" 16 50 "*int8"
F G "atof" 16 50 "float(*int8 s)" "Standard template: float atoe(char * s)"
C L "atof" 16 52 1 "*"
C L "atof" 16 52 1 "*"
C L "atof" 16 52 1 "*"
V L "s" 16 57 "*int8"
F G "atoe" 16 57 "float(*int8 s)" "Standard template: signed int  atoi(char * s)"
C L "atoe" 16 59 1 "*"
C L "atoe" 16 59 1 "*"
V L "s" 16 63 "*int8"
F G "atoi" 16 63 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
C L "atoi" 16 59 2 "FUNCTION"
V L "s" 16 68 "*int8"
F G "atoi32" 16 68 "sint32(*int8 s)" "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 16 59 2 "FUNCTION"
V L "num" 16 73 "sint32"
V L "base" 16 73 "int8"
V L "s" 16 73 "*int8"
F G "itoa" 16 73 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed long  atol(char * s)"
C L "itoa" 16 75 1 "*"
C L "itoa" 16 75 1 "*"
V L "s" 16 79 "*int8"
F G "atol" 16 79 "sint16(*int8 s)" "Standard template: float strtol(char * s,char *endptr)"
C L "atol" 16 81 1 "*"
C L "atol" 16 81 1 "*"
C L "atol" 16 81 1 "*"
V L "s" 16 86 "*int8"
V L "endptr" 16 86 "*int8"
F G "strtod" 16 86 "float(*int8 s,*int8 endptr)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtod" 16 88 1 "*"
C L "strtod" 16 88 1 "*"
C L "strtod" 16 88 1 "*"
C L "strtod" 16 88 1 "*"
V L "s" 16 94 "*int8"
V L "endptr" 16 94 "*int8"
V L "base" 16 94 "sint8"
F G "strtol" 16 94 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: long strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 16 96 1 "*"
C L "strtol" 16 96 1 "*"
C L "strtol" 16 96 1 "*"
C L "strtol" 16 96 1 "*"
V L "s" 16 102 "*int8"
V L "endptr" 16 102 "*int8"
V L "base" 16 102 "sint8"
F G "strtoul" 16 102 "int16(*int8 s,*int8 endptr,sint8 base)" "Pseudo-random sequence generation functions"
C L "strtoul" 16 96 1 "FUNCTION"
C L "strtoul" 16 108 1 "*"
C L "strtoul" 16 108 1 "*"
C L "strtoul" 16 108 1 "*"
C L "strtoul" 16 108 1 "*"
C L "strtoul" 16 108 1 "*"
F G "rand" 16 117 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
C L "rand" 16 119 1 "*"
V L "seed" 16 139 "int32"
F G "srand" 16 139 "void(int32 seed)" "Memory management functions"
C L "srand" 16 119 3 "FUNCTION"
V L "string" 16 153 "*int8"
F G "system" 16 153 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 16 119 1 "FUNCTION"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 1 "*"
C L "system" 16 159 4 "*"
C L "system" 16 177 1 "*"
C L "system" 16 177 1 "*"
C L "system" 16 177 1 "*"
C L "system" 16 177 1 "*"
C L "system" 16 177 1 "*"
C L "system" 16 177 1 "*"
C L "system" 16 177 1 "*"
C L "system" 16 177 1 "*"
D G "labs" 16 197 "abs"
V L "numer" 16 199 "sint8"
V L "denom" 16 199 "sint8"
F G "div" 16 199 "div_t(sint8 numer,sint8 denom)"
V L "numer" 16 200 "sint16"
V L "denom" 16 200 "sint16"
F G "ldiv" 16 200 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 16 177 4 "FUNCTION"
C L "ldiv" 9 2 7 "FUNCTION"
C L "ldiv" 15 2 7 "FUNCTION"
V L "numer" 16 222 "sint8"
V L "denom" 16 222 "sint8"
F G "div" 16 223 "div_t(sint8 numer,sint8 denom)"
V L "val" 16 224 "div_t"
V L "numer" 16 230 "sint16"
V L "denom" 16 230 "sint16"
F G "ldiv" 16 231 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 16 232 "ldiv_t"
V L "s" 16 238 "*int8"
F G "atof" 16 239 "float(*int8 s)"
V L "pow10" 16 240 "float"
V L "result" 16 241 "float"
V L "sign" 16 242 "int8"
V L "c" 16 243 "int8"
V L "ptr" 16 244 "int8"
V L "s" 16 277 "*int8"
F G "atoe" 16 278 "float(*int8 s)"
V L "pow10" 16 279 "float"
V L "result" 16 280 "float"
V L "sign" 16 281 "int8"
V L "expsign" 16 282 "int8"
V L "c" 16 283 "int8"
V L "ptr" 16 284 "int8"
V L "i" 16 285 "int8"
V L "exp" 16 286 "float"
V L "expcnt" 16 287 "int8"
C L "atoe" 16 313 1 "FUNCTION"
V L "s" 16 344 "*int8"
F G "atoi" 16 345 "sint8(*int8 s)"
V L "result" 16 346 "sint8"
V L "sign" 16 347 "int8"
V L "base" 16 347 "int8"
V L "index" 16 347 "int8"
V L "c" 16 348 "int8"
C L "atoi" 16 313 1 "FUNCTION"
C L "atoi" 16 313 1 "FUNCTION"
C L "atoi" 16 313 1 "FUNCTION"
C L "atoi" 16 313 1 "FUNCTION"
C L "atoi" 16 313 1 "FUNCTION"
C L "atoi" 16 313 1 "FUNCTION"
V L "s" 16 413 "*int8"
F G "atol" 16 414 "sint16(*int8 s)"
V L "result" 16 415 "sint16"
V L "sign" 16 416 "int8"
V L "base" 16 416 "int8"
V L "index" 16 416 "int8"
V L "c" 16 417 "int8"
C L "atol" 16 313 1 "FUNCTION"
C L "atol" 16 313 1 "FUNCTION"
C L "atol" 16 313 1 "FUNCTION"
C L "atol" 16 313 1 "FUNCTION"
C L "mult_with10" 16 313 1 "FUNCTION"
V L "num" 16 480 "int32"
F G "mult_with10" 16 481 "sint32(int32 num)"
V L "s" 16 485 "*int8"
F G "atoi32" 16 486 "sint32(*int8 s)"
V L "result" 16 487 "sint32"
V L "sign" 16 488 "int8"
V L "base" 16 488 "int8"
V L "index" 16 488 "int8"
V L "c" 16 489 "int8"
C L "atoi32" 16 313 1 "FUNCTION"
C L "atoi32" 16 313 1 "FUNCTION"
C L "atoi32" 16 313 1 "FUNCTION"
C L "atoi32" 16 313 1 "FUNCTION"
C L "atoi32" 16 313 1 "FUNCTION"
V L "num" 16 550 "sint32"
V L "base" 16 550 "int8"
V L "s" 16 550 "*int8"
F G "itoa" 16 551 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 16 552 "int32"
V L "i" 16 553 "int8"
V L "sign" 16 553 "int8"
V L "cnt" 16 553 "int8"
V L "c" 16 554 "int8"
C L "itoa" 16 313 1 "FUNCTION"
C L "itoa" 16 313 1 "FUNCTION"
C L "itoa" 16 313 1 "FUNCTION"
C L "itoa" 16 313 1 "FUNCTION"
C L "itoa" 16 313 1 "FUNCTION"
V L "s" 16 587 "*int8"
V L "endptr" 16 587 "*int8"
F G "strtod" 16 587 "float(*int8 s,*int8 endptr)"
V L "pow10" 16 588 "float"
V L "result" 16 589 "float"
V L "sign" 16 590 "int8"
V L "point" 16 590 "int8"
V L "c" 16 591 "int8"
V L "ptr" 16 592 "int8"
V L "s" 16 651 "*int8"
V L "endptr" 16 651 "*int8"
V L "base" 16 651 "sint8"
F G "strtoul" 16 652 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 16 653 "*int8"
V L "s1" 16 653 "*int8"
V L "sd" 16 653 "*int8"
V L "x" 16 654 "int16"
V L "sign" 16 655 "int8"
V L "digits" 16 656 "int8[1]"
C L "strtoul" 16 313 1 "FUNCTION"
C L "strtoul" 16 313 1 "FUNCTION"
C L "strtoul" 16 313 1 "FUNCTION"
V L "s" 16 713 "*int8"
V L "endptr" 16 713 "*int8"
V L "base" 16 713 "sint8"
F G "strtol" 16 714 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 16 715 "*int8"
V L "s1" 16 715 "*int8"
V L "sd" 16 715 "*int8"
V L "x" 16 716 "sint16"
V L "sign" 16 717 "int8"
V L "digits" 16 718 "int8[1]"
C L "strtol" 16 313 1 "FUNCTION"
C L "strtol" 16 313 1 "FUNCTION"
C L "strtol" 16 313 1 "FUNCTION"
V L "string" 16 776 "*int8"
F G "system" 16 777 "sint8(*int8 string)"
V L "s" 16 781 "*int8"
V L "n" 16 781 "int8"
F G "mblen" 16 782 "int8(*int8 s,int8 n)"
V L "pwc" 16 786 "*int8"
V L "s" 16 786 "*int8"
V L "n" 16 786 "int8"
F G "mbtowc" 16 787 "int8(*int8 pwc,*int8 s,int8 n)"
V L "s" 16 792 "*int8"
V L "wchar" 16 792 "int8"
F G "wctomb" 16 793 "int8(*int8 s,int8 wchar)"
V L "pwcs" 16 798 "*int8"
V L "s" 16 798 "*int8"
V L "n" 16 798 "int8"
F G "mbstowcs" 16 799 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "s" 16 804 "*int8"
V L "pwcs" 16 804 "*int8"
V L "n" 16 804 "int8"
F G "wcstombs" 16 805 "int8(*int8 s,*int8 pwcs,int8 n)"
V G "_Randseed" 16 814 "int32"
F G "rand" 16 817 "int16()"
V L "seed" 16 822 "int32"
F G "srand" 16 823 "void(int32 seed)"
V L "p1" 16 831 "*int8"
V L "p2" 16 831 "*int8"
T G "*_Cmpfun" 16 831 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 16 833 "*int8"
V L "qitems" 16 833 "int8"
V L "qsize" 16 833 "int8"
V L "cmp" 16 833 "_Cmpfun"
F G "qsort" 16 833 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 16 834 "int8"
V L "j" 16 834 "int8"
V L "i" 16 834 "int8"
V L "l" 16 834 "int8"
V L "done" 16 835 "int1"
V L "t" 16 836 "int8[16]"
V L "key" 16 861 "*int8"
V L "base" 16 861 "*int8"
V L "num" 16 861 "int8"
V L "width" 16 861 "int8"
V L "cmp" 16 861 "_Cmpfun"
F G "bsearch" 16 862 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "p" 16 863 "*int8"
V L "q" 16 863 "*int8"
V L "n" 16 864 "int8"
V L "pivot" 16 865 "int8"
V L "val" 16 866 "sint8"
C L "bsearch" 16 313 1 "FUNCTION"
D G "GPS_BUFFER_LEN" 14 5 "512"
V G "GPSBuffer" 14 7 "int8[512]"
V G "g_nGPSBufferWritePtr" 14 8 "int16"
V G "g_nGPSBufferReadPtr" 14 9 "int16"
V G "g_nGPSBufferEOLPtr" 14 10 "int16"
V G "g_nGPSSentences" 14 11 "int8"
V G "g_nGPSOverlapped" 14 12 "int8"
D G "GPS_INC_READPTR" 14 14 "(n)   (g_nGPSBufferReadPtr = (g_nGPSBufferReadPtr + (n))%GPS_BUFFER_LEN)"
D G "GPS_INC_WRITEPTR" 14 15 "(n)   (g_nGPSBufferWritePtr = (g_nGPSBufferWritePtr + (n))%GPS_BUFFER_LEN)"
D G "LOG_FLAG_DISCARD_ZERO_KHM" 14 17 "0x01"
V G "nStillSecCount" 14 31 "int8"
T G "SATINFO" 14 37 "{int8 nSatID,int8 nSatSNR}"
V G "satData" 14 39 "SATINFO"
T G "GPSDATA" 14 59 "{int8 bFixed,TimeRecord time,int32 nLatitude,float fLatitude,int8 northSouth,int32 nLongitude,float fLongitude,int8 eastWest,int32 nSpeed,float fSpeed,int16 direction,int8 numSat,sint32 nAltitude,float fAltitude,int8 fixType,int8[32] satSNR}"
V G "fAccDistance" 14 61 "float"
V G "recGPSData" 14 63 "GPSDATA"
V G "GPSFlag" 14 65 "int8"
V G "g_nTickNewData" 14 73 "int16"
V G "g_nGPSState" 14 86 "int8"
V G "g_nGPSReceived" 14 87 "int8"
V G "g_nGPSParamIndex" 14 88 "int8"
V G "g_bGPSNumSign" 14 89 "int8"
F G "gps_ResetSatelliteSignal" 14 91 "void()"
F G "GPS_isr" 14 95 "void()"
V L "ch" 14 96 "int8"
V L "chKeyword" 14 97 "int8[5]"
C L "GPS_isr" 14 8 3 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 2 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 2 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 8 1 "FUNCTION"
C L "GPS_isr" 14 253 1 "*10"
C L "GPS_isr" 14 253 1 "FUNCTION"
C L "GPS_isr" 14 253 1 "FUNCTION"
C L "GPS_isr" 14 260 1 "*10"
C L "GPS_isr" 14 260 1 "FUNCTION"
C L "GPS_isr" 14 260 1 "FUNCTION"
C L "GPS_isr" 14 267 1 "*10"
C L "GPS_isr" 14 267 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "*10"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
C L "GPS_isr" 14 275 1 "FUNCTION"
F G "RDA_isr" 14 434 "void()"
V L "ch" 14 435 "int8"
C L "RDA_isr" 14 275 1 "FUNCTION"
C L "RDA_isr" 14 275 1 "FUNCTION"
C L "RDA_isr" 14 275 1 "FUNCTION"
C L "RDA_isr" 14 275 1 "FUNCTION"
F G "gps_strtof" 14 470 "float()"
V L "fResult" 14 471 "float"
V L "fTemp" 14 471 "float"
V L "fDiv" 14 471 "float"
V L "bMinus" 14 472 "int8"
F G "gps_strtoul" 14 515 "int16()"
V L "lResult" 14 516 "int16"
V L "lTemp" 14 516 "int16"
V L "nLen" 14 517 "int8"
C L "gps_strtoul" 14 275 1 "FUNCTION"
F G "gps_strtol" 14 538 "sint16()"
V L "lResult" 14 539 "sint16"
V L "lTemp" 14 539 "sint16"
V L "bMinus" 14 540 "int8"
V L "nLen" 14 541 "int8"
C L "gps_strtol" 14 275 1 "FUNCTION"
C L "parseGPGGA" 14 275 2 "FUNCTION"
F G "parseGPGGA" 14 578 "int8()"
V L "nComma" 14 579 "int8"
V L "nLen" 14 579 "int8"
V L "fTemp" 14 580 "float"
V L "bFixed" 14 581 "int8"
C L "parseGPGGA" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
F G "parseGPRMC" 14 622 "int8()"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPRMC" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 4 "FUNCTION"
F G "parseGPGSV" 14 728 "int8()"
V L "nComma" 14 729 "int8"
V L "nNumMsg" 14 730 "int8"
V L "nMsgID" 14 730 "int8"
V L "nNumSat" 14 730 "int8"
V L "nSatID" 14 731 "int8"
V L "nSatElevation" 14 731 "int8"
V L "nSatSNR" 14 731 "int8"
V L "nSatAzimuth" 14 732 "int16"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parseGPGSV" 14 275 1 "FUNCTION"
C L "parse_GPGSA" 14 275 1 "FUNCTION"
F G "parse_GPGSA" 14 779 "void()"
V L "nSatID" 14 780 "int8"
C L "parse_GPGSA" 14 275 1 "FUNCTION"
C L "parse_GPGSA" 14 275 1 "FUNCTION"
C L "parse_GPGSA" 14 275 1 "FUNCTION"
C L "parse_GPGSA" 14 275 1 "FUNCTION"
C L "parse_GPGSA" 14 275 1 "FUNCTION"
F G "gps_ResetSatelliteSignal" 14 798 "void()"
V L "i" 14 799 "int8"
V G "g_nTickStart" 14 806 "int16"
V G "g_nTickEnd" 14 806 "int16"
F G "GPSParser" 14 809 "void()"
V L "sName" 14 810 "int8[3]"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "GPSParser" 14 275 1 "FUNCTION"
C L "realtimeProcess" 14 275 16 "FUNCTION"
F G "realtimeProcess" 0 58 "void()"
F G "EXT_isr" 0 62 "void()"
F G "EXT1_isr" 0 71 "void()"
F G "EXT2_isr" 0 80 "void()"
F G "EXT3_isr" 0 89 "void()"
F G "RB_isr" 0 98 "void()"
V G "sCmdBTLNM" 0 110 "int8[1]"
V G "sCmdBTSRV" 0 111 "int8[1]"
V G "sCmdBTAUT" 0 112 "int8[1]"
V G "nReceived2" 0 115 "int16"
V G "sBTBuffer" 0 116 "int8[64]"
V G "nBTBufferLen" 0 117 "int8"
F G "RDA2_isr" 0 121 "void()"
V L "ch" 0 122 "int8"
C L "RDA2_isr" 0 110 1 "FUNCTION"
C L "TIMER0_isr" 0 110 1 "FUNCTION"
F G "TIMER0_isr" 0 148 "void()"
C L "TIMER0_isr" 0 110 2 "FUNCTION"
C L "TIMER0_isr" 0 110 1 "FUNCTION"
V G "nHMCA" 0 176 "int16"
V G "nHMCB" 0 176 "int16"
F G "senseBattery" 0 178 "void()"
F G "ReadSensors" 0 180 "void()" "Turn on sensors power"
C L "ReadSensors" 0 110 1 "FUNCTION"
C L "ReadSensors" 0 110 3 "FUNCTION"
D G "CardInserted" 0 207 "PIN_D4"
V G "gActCard" 0 208 "int8"
V G "gPrevCard" 0 208 "int8"
D G "AT26ChipSel" 17 3 "PIN_F6"
D G "AT26ChipClk" 17 4 "PIN_C3"
D G "AT26ChipDin" 17 5 "PIN_C4"
D G "AT26ChipDout" 17 6 "PIN_C5"
D G "AT26CMD_READ_ARRAY" 17 9 "0x0B"
D G "AT26CMD_READ_ARRAY_SLOW" 17 10 "0x03"
D G "AT26CMD_ERASE_4KB" 17 13 "0x20"
D G "AT26CMD_ERASE_32KB" 17 14 "0x52"
D G "AT26CMD_ERASE_64KB" 17 15 "0xD8"
D G "AT26CMD_ERASE_CHIP" 17 16 "0x60"
D G "AT26CMD_PROGRAM" 17 17 "0x02"
D G "AT26CMD_WRITE_ENABLE" 17 20 "0x06"
D G "AT26CMD_WRITE_DISABLE" 17 21 "0x04"
D G "AT26CMD_PROTECT_SECTOR" 17 22 "0x36"
D G "AT26CMD_UNPROTECT_SECTOR" 17 23 "0x39"
D G "AT26CMD_READ_SECTOR_PROTECTION_REGISTERS" 17 24 "0x3C"
D G "AT26CMD_READ_STATUS_REGISTER" 17 27 "0x05"
D G "AT26CMD_WRITE_STATUS_REGISTER" 17 28 "0x01"
D G "AT26CMD_READ_MANUFACTURER_DEVICE_ID" 17 31 "0x9F"
D G "AT26CMD_DEEP_POWER_DOWN" 17 32 "0xB9"
D G "AT26CMD_RESUME_FROM_DEEP_POWER_DOWN" 17 33 "0xAB"
F G "AT26_ReadDeviceID" 17 36 "int32()"
V L "byRead" 17 37 "int8"
V L "nResp" 17 38 "int32"
C L "AT26_ReadDeviceID" 17 8 1 "FUNCTION"
C L "AT26_ReadDeviceID" 17 8 1 "FUNCTION"
C L "AT26_ReadDeviceID" 17 8 1 "FUNCTION"
F G "AT26_ReadStatusRegister" 17 66 "int8()"
V L "byRead" 17 67 "int8"
C L "AT26_ReadStatusRegister" 17 8 1 "FUNCTION"
V L "nData" 17 81 "int8"
F G "AT26_WriteStatusRegister" 17 82 "void(int8 nData)"
F G "AT26_WriteEnable" 17 95 "void()"
F G "AT26_WriteDiable" 17 106 "void()"
V L "nAddress" 17 116 "int32"
F G "AT26_ReadSectorProtection" 17 117 "int8(int32 nAddress)"
V L "byRead" 17 118 "int8"
C L "AT26_ReadSectorProtection" 17 8 1 "FUNCTION"
V L "nAddress" 17 136 "int32"
F G "AT26_UnprotectSector" 17 137 "void(int32 nAddress)"
V L "nAddress" 17 149 "int32"
V L "nData" 17 149 "int8"
F G "AT26_WriteByte" 17 150 "void(int32 nAddress,int8 nData)"
V L "nAddress" 17 164 "int32"
F G "AT26_ReadByte" 17 165 "int8(int32 nAddress)"
V L "byRead" 17 166 "int8"
C L "AT26_ReadByte" 17 8 1 "FUNCTION"
V L "nAddress" 17 184 "int32"
F G "AT26_BlockErase4K" 17 185 "void(int32 nAddress)"
D G "SCP1000_H" 18 2 ""
D G "SCP1000_ADDRESS" 18 5 "0x22"
D G "SCPREG_REVID" 18 8 "0x00"
D G "SCPREG_DATAWR" 18 9 "0x01" "Indirect register access data"
D G "SCPREG_ADDPTR" 18 10 "0x02" "Indirect register access pointer"
D G "SCPREG_OPERATION" 18 11 "0x03" "Operation register"
D G "SCPREG_OPSTATUS" 18 12 "0x04" "Operation status"
D G "SCPREG_RSTR" 18 13 "0x06" "ASIC software reset"
D G "SCPREG_STATUS" 18 14 "0x07" "ASIC top-level status"
D G "SCPREG_DATARD8" 18 15 "0x7F" "Pressure output data (MSB)"
D G "SCPREG_DATARD16" 18 16 "0x80" "Pressure output data (LSB)"
D G "SCPREG_TEMPOUT" 18 17 "0x81" "14bit temperature output data"
D G "SCPOP_NOP" 18 20 "0x00" "No operation/cancel current operation/stop continuous sampling"
D G "SCPOP_READREG" 18 21 "0x01" "Read indirect access register pointed by ADDPTR. Register contents is available in DATARD16 in bits[7:0]"
D G "SCPOP_WRITEREG" 18 22 "0x02" "Write DATAWR contents in to the indirect access register pointed by ADDPTR"
D G "SCPOP_READEEPROM" 18 23 "0x05" "Read EEPROM register pointed by ADDPTR. Register contents is available in DATARD8 in bits [7:0]"
D G "SCPOP_WRITEEEPROM" 18 24 "0x06" "Write DATAWR contents into the EEPROM register pointed by ADDPTR."
D G "SCPOP_INIT" 18 25 "0x07" "Perform INIT sequence"
D G "SCPOP_HSPMODE" 18 26 "0x09" "High speed continuous mode , continuous"
D G "SCPOP_HRESMODE" 18 27 "0x0A" "High resolution mode, continuous"
D G "SCPOP_UPWRMODE" 18 28 "0x0B" "Utra low power acquisition mode, continuous"
D G "SCPOP_TRIG" 18 29 "0x0C" "Low Power acquisition mode. single sample."
D G "SCPOP_SELFTEST" 18 30 "0x0F" "ASIC Self Test"
V L "nRegAddr" 18 32 "int8"
F G "SCP1000_ReadRegister8" 18 33 "int8(int8 nRegAddr)"
V L "nResult" 18 34 "int8"
C L "SCP1000_ReadRegister8" 18 4 1 "FUNCTION"
C L "SCP1000_ReadRegister8" 18 4 1 "FUNCTION"
C L "SCP1000_ReadRegister8" 18 4 1 "FUNCTION"
V L "nRegAddr" 18 55 "int8"
V L "nData" 18 55 "int8"
F G "SCP1000_WriteRegister8" 18 56 "int8(int8 nRegAddr,int8 nData)"
C L "SCP1000_WriteRegister8" 18 4 1 "FUNCTION"
C L "SCP1000_WriteRegister8" 18 4 1 "FUNCTION"
V L "nRegAddr" 18 72 "int8"
F G "SCP1000_ReadRegister16" 18 73 "int16(int8 nRegAddr)"
V L "nTemp" 18 74 "int16"
C L "SCP1000_ReadRegister16" 18 4 1 "FUNCTION"
C L "SCP1000_ReadRegister16" 18 4 1 "FUNCTION"
C L "SCP1000_ReadRegister16" 18 4 1 "FUNCTION"
F G "SCP1000_ReadID" 18 96 "int8()"
F G "SCP1000_ReadStatus" 18 101 "int8()"
F G "SCP1000_ReadTemperature" 18 107 "int16()"
F G "SCP1000_ReadPressure" 18 112 "int16()"
F G "SCP1000_Reset" 18 118 "void()"
C L "SCP1000_Reset" 18 4 1 "FUNCTION"
F G "SCP1000_SelfTest" 18 123 "int8()"
C L "SCP1000_SelfTest" 18 4 1 "FUNCTION"
V G "nSCPStatus" 0 215 "int8"
V G "nSCPTemperature" 0 216 "int16"
V G "nSCPPressure" 0 216 "int16"
V G "fSCPTemperature" 0 217 "float"
V G "fSCPPressure" 0 217 "float"
V G "fSCPAltitude" 0 218 "float"
V G "fBatteryVoltage" 0 219 "float"
F G "senseBattery" 0 222 "void()"
V L "nTemp" 0 223 "int16" "Read battery voltage"
V L "x" 0 234 "int8"
V L "y" 0 234 "int8"
V L "nSat" 0 234 "int8"
F G "displayGPSSNRBar" 0 235 "void(int8 x,int8 y,int8 nSat)"
V L "nSNR" 0 236 "int8"
V L "nOrgSNR" 0 236 "int8"
V L "nSNRColor" 0 237 "int16"
C L "displayGPSSNRBar" 0 238 1 "FUNCTION"
F G "displayGPSSNR" 0 267 "void()"
V L "i" 0 268 "int8"
V L "nTotalValidSat" 0 268 "int8"
V L "x" 0 269 "int8"
V L "y" 0 269 "int8"
C L "displayGPSSNR" 0 238 1 "FUNCTION"
C L "displayGPSSNR" 0 238 1 "FUNCTION"
C L "displayGPSSNR" 0 238 1 "FUNCTION"
C L "displayGPSSNR" 0 238 1 "FUNCTION"
F G "realtimeProcess" 0 312 "void()" "while(g_nGPSSentences)   //New sentence received,"
C L "realtimeProcess" 0 238 2 "FUNCTION"
F G "MAIN" 0 321 "void()"
V L "i" 0 322 "int32"
V L "nTemp" 0 323 "int16"
V L "nPressure" 0 324 "int16"
V L "fTemp" 0 325 "float"
V L "nTick" 0 326 "int16"
V L "bSDReady" 0 327 "int8"
V L "error" 0 328 "int8" "delay_ms(2000);"
C L "MAIN" 0 238 2 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 2 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 13 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 11 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
C L "MAIN" 0 238 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "strcpy" 2 0
F B "memset" 3 0
F B "memcpy" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "output_f" 1 0
F B "output_g" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "input_f" 0 0
F B "input_g" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "set_tris_f" 1 0
F B "set_tris_g" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "get_tris_f" 0 0
F B "get_tris_g" 0 0
F B "port_b_pullups" 1 0
F B "port_d_pullups" 1 0
F B "port_e_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "setup_timer_0" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_timer_4" 3 0
F B "get_timer4" 0 0
F B "set_timer4" 1 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_ccp3" 1 2
F B "set_pwm3_duty" 1 0
F B "setup_ccp4" 1 0
F B "set_pwm4_duty" 1 0
F B "setup_ccp5" 1 0
F B "set_pwm5_duty" 1 0
F B "setup_vref" 1 0
F B "setup_oscillator" 1 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 2
F B "setup_uart" 1 2
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
